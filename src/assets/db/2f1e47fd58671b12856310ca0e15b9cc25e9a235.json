{"parentSha1":"b118c3a9ada6da5eab23d0f2992680bf89ef4215","path":"books/Introduction to Probability, Statistics, and Random Processes/3.3.0/6","item":{"title":"6","attr":{"q":"$`N`$ guests arrive at a party. Each person is wearing a hat. We collect all the hats and then randomly redistribute the hats, giving each person one of the $`N`$ hats randomly. Let $`X_N`$ be the number of people who receive their own hats. Find the PMF of $`X_N`$.\n\nHint: We previously found that (Problem 7 in Section 2.1.5)\n\n```math\nP(X_N=0)=\\frac{1}{2!}-\\frac{1}{3!}+\\frac{1}{4!}- \\cdots (-1)^N\\frac{1}{N!}\n```\n\nfor $`N=1,2, \\cdots`$. Using this, find $`P(X_N=k)`$ for all $`k \\in \\{0,1, \\cdots N\\}`$","a":"Let's first choose $`k`$ people from the $`N`$ guests.\n\n```math\n{N \\choose k}\n```\n\nLet $`A`$ be the case that the choosen $`i`$ people get their original hats, and $`B`$ the all the other people get a wrong hat. Multiply $`A \\cap B`$ to the combination and we get what we want.\n\n```math\nP(X_N = i) \\\\\n= {N \\choose k}P(A \\cap B) \\\\\n= {N \\choose k}P(B|A)P(A) \\\\\n```\n\n$`A`$ is like permutation of all the people other than those $`k`$.\n\n```math\n= {\\cfrac{N!}{k!(N - k)!}}P(B|A){\\cfrac{(N-k)!}{N!}}\n```\n\nFor the $`P(B|A)`$, given that those $`k`$ already got the right hats, it's simply that nobody in the rest $`N - k`$ people gets the right hat, which is $`P(X_{N-k}=0)`$.\n\n```math\n= {\\cfrac{N!}{k!(N - k)!}}{P(X_{N-k}=0)}{\\cfrac{(N-k)!}{N!}} \\\\\n=  \\cfrac{P(X_{N-k}=0)}{k!}\n```\n\nI've made a validation code.\n\n```haskell\nproblem3_6 :: IO ()\nproblem3_6 = do\n    let sampleSize = 999999\n    let n = 5\n    let k = 2\n    let randomVars = take sampleSize $ map (randomVar6 n) [0..]\n    let xs = filter (k==) randomVars\n    print $ approxRatio (length xs) sampleSize\n\nrandomVar6 :: Int -> Int -> Int\nrandomVar6 n seed = length $ filter (0==) $ zipWith (-) ar sh\n            where ar = [0..n-1]\n                  sh = shuffle' ar n (mkStdGen seed)\n```\n\nand I tested with few different parameters and the output was clase enough to support the result."},"sha1":"2f1e47fd58671b12856310ca0e15b9cc25e9a235"},"kids":[]}
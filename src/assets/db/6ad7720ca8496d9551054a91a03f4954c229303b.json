{"parentSha1":"9d74a7917a46fd36d8008543345c3449dfd588f4","path":"books/Category Theory For Programmers/15. The Yoneda Lemma/1","kids":[],"item":{"attr":{"a":"let `psi’ fa = (flip fmap) fa` so `psi` and `phi`‘s each input/output type match. (flip swaps the order of parameters)\n\n```haskell\nphi (psi’ fa)\n= (psi’ fa) id\n= ((flip fmap) fa) id\n= fmap id fa\n= fa\n```","q":"Show that the two functions `phi` and `psi` that form the Yoneda isomorphism in Haskell are inverses of each other.\n\n```haskell\nphi :: (forall x . (a -> x) -> F x) -> F a\nphi alpha = alpha id\n```\n\n```haskell\npsi :: F a -> (forall x . (a -> x) -> F x)\npsi fa h = fmap h fa\n```"},"sha1":"6ad7720ca8496d9551054a91a03f4954c229303b","title":"1"}}
{"path":"books/Category Theory For Programmers/8. Functoriality/6","kids":[],"item":{"attr":{"a":"A function type `Key -> T` would be a profunctor. But `std::map<Key, T>` is not a function. It's very similar though. If only we could set a default value for unknown key in `std::map` (currently it's not supported). But it's not hard to define a new data structure works that way. One way would be overriding the operator `[]` and make it return a default value of `T`.","q":"Should `std::map` be considered a bifunctor or a profunctor in the two template arguments `Key` and `T`? How would you redesign this data type to make it so?"},"sha1":"b62fe47677352aa66777fa61d38d082b4546430f","title":"6"}}
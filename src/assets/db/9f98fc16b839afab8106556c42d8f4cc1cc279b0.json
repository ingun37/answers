{"parentSha1":"b614f31d04b3bc2b3d23ee4337475251429e5a9f","path":"books/Category Theory For Programmers/13. Free Monoids","kids":[{"attr":{"a":"In haskell, `List ()`\n\nIt’s a representation of natural numbers","q":"What is the free monoid generated by a one-element set? Can you see what it’s isomorphic to?\n"},"sha1":"ae9de710ca0f30d9451d97d0d8a391ef5b7e7521","title":"3"},{"attr":{"a":"Because there won’t be a sub-monoid in isomorphic relation.\n","q":"You might think (as I did, originally) that the requirement that a homomorphism of monoids preserve the unit is redundant. After all, we know that for all `a`\n`h a * h e = h (a * e) = h a`\nSo `h e` acts like a right unit (and, by analogy, as a left unit). The problem is that `h a`, for all `a` might only cover a sub-monoid of the target monoid. There may be a “true” unit outside of the image of `h`. Show that an isomorphism between monoids that preserves multiplication must automatically preserve unit.\n"},"sha1":"e222bf971f83b49d49408586ddef86969809094e","title":"1"},{"attr":{"a":"* Image of [] would be 1. (unit to unit)\n* Image of [1, 2, 3, 4] would be 1 * 2 * 3 * 4\n* 12 would have lists as much as combination of it’s factors.\n* Product of squares could be another homomorphism. i.e `f([a,b,c…]) = a² * b² * c²…`\n","q":"Consider a monoid homomorphism from lists of integers with concatenation to integers with multiplication. What is the image of the empty list `[]`? Assume that all singleton lists are mapped to the integers they contain, that is `[3]` is mapped to 3, etc. What’s the image of `[1, 2, 3, 4]`? How many different lists map to the integer 12? Is there any other homomorphism between the two monoids?"},"sha1":"3b2f7628a9b6b9e5de566bb7ef408b80bb06a947","title":"2"}],"item":{"attr":{},"sha1":"9f98fc16b839afab8106556c42d8f4cc1cc279b0","title":"13. Free Monoids"}}
{"parentSha1":"ffe8f2b4491a9b045b5d51afb0b52195db3d36ae","path":"books/Introduction to Probability, Statistics, and Random Processes/2.2.0","kids":[{"attr":{"a":"For (a), it's multiplication of choosing 4 out of 20 black phones and 6 out of 30 white phones.\n\n```math\n\\cfrac{{20 \\choose 4}{30 \\choose 6}}{{50 \\choose 10}} \\approx 0.2800586031\n```\n\nFor (b)\n\n```math\n\\cfrac{{20 \\choose 2}{30 \\choose 8}}{{50 \\choose 10}} + \\cfrac{{20 \\choose 1}{30 \\choose 9}}{{50 \\choose 10}} + \\cfrac{{20 \\choose 0}{30 \\choose 10}}{{50 \\choose 10}} \\approx 0.13903865738\n```","q":"There are 20 black cell phones and 30 white cell phones in a store. An employee takes 10 phones at random. Find the probability that\n\na. there will be exactly 4 black cell phones among the chosen phones;\nb. there will be less than 3 black cell phones among the chosen phones."},"sha1":"4f226ac241646a6d0b6840c317cacd7aa73e5704","title":"3"},{"attr":{"a":"For (a), it's multiplication of choosing 1 out of 4 aces and 4 out of the rest.\n\n```math\n\\cfrac{{4 \\choose 1}{48 \\choose 4}}{{52 \\choose 5}} \\approx 0.2994736356\n```\n\nFor (b)\n\n```math\n1 - \\cfrac{{48 \\choose 5}}{{52 \\choose 5}} \\approx 0.34115800166\n```\n\n## Footnotes\n\nI was in disbelief with the result so I made a validating program to test with 999999 samples.\n\n```haskell\nmodule Lib\n    ( someFunc, combination, hasOnly1Ace\n    ) where\nimport System.Random\nimport System.Random.Shuffle\nimport Data.Ix\nimport Data.Ratio\nimport Data.Set hiding (map, take, filter)\n\nsomeFunc :: IO ()\nsomeFunc = do\n    let sampleSize = 999999\n    let seeds = range (0, sampleSize)\n    let samples = map (pickRandoms 5) seeds\n    let eventSize1 = length $ filter hasOnly1Ace samples\n    print $ fromRational $ (toInteger eventSize1) % (toInteger sampleSize)\n    let eventSize2 = length $ filter hasAtLeast1Ace samples\n    print $ fromRational $ (toInteger eventSize2) % (toInteger sampleSize)\n\npickRandoms :: Int -> Int -> [Int]\npickRandoms n seed = take n $ randomRs (0,51) (mkStdGen seed)\n\nseqMul :: Integer -> Integer -> Integer\nseqMul x = product . range . (,) x\n\nfactorial :: Integer -> Integer\nfactorial 0 = 1\nfactorial n = n * (factorial (n-1))\n\ncombination :: Integer -> Integer -> Integer\ncombination n r = div (seqMul (n - r + 1) n) (factorial r)\n\nhasOnly1Ace :: [Int] -> Bool\nhasOnly1Ace arr = let a = fromList arr\n                      aces = fromList [0,1,2,3]\n                  in 1 == (size $ intersection a aces)\n\nhasAtLeast1Ace :: [Int] -> Bool\nhasAtLeast1Ace arr = let a = fromList arr\n                         aces = fromList [0,1,2,3]\n                     in 0 < (size $ intersection a aces)\n```\n\nResult was\n\n```\n0.3021743021743022\n0.34475734475734476\n```\n\nwhich was very close to my calculation.\n\nI learned not to believe my intuition.","q":"Five cards are dealt from a shuffled deck. What is the probability that the dealt hand contains\n\na. exactly one ace;\nb. at least one ace?"},"sha1":"d22d26048b863c380fdd15a20aa00ea771528e30","title":"4"},{"attr":{"a":"Pick 8 from 12 chairs.\n\n```math\n{12 \\choose 8}\n```\n\nMultiply the number of ways for 8 people to sit on 8 chairs.\n\n```math\n{12 \\choose 8}P^8_8\n= {12! \\over 8!(12-8)!}8!\n= {12! \\over (12-8)!}\n= {12! \\over 4!}\n= 19958400\n```","q":"Eight committee members are meeting in a room that has twelve chairs. In how many ways can they sit in the chairs?"},"sha1":"2578a0935b300c9bde093579fb2c7d92a13a60d6","title":"2"}],"item":{"attr":{},"sha1":"0fd826761d1b3b6c1b42cef8679ad2828e5160b3","title":"2.2.0"}}
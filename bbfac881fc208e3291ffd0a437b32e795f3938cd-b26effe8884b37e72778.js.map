{"version":3,"file":"bbfac881fc208e3291ffd0a437b32e795f3938cd-b26effe8884b37e72778.js","mappings":"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","sources":["webpack://math-book-answers/./node_modules/@mui/icons-material/ExpandMore.js","webpack://math-book-answers/./node_modules/@mui/icons-material/Share.js","webpack://math-book-answers/./node_modules/@mui/material/Stack/Stack.js","webpack://math-book-answers/./node_modules/@mui/material/node_modules/react-is/cjs/react-is.production.min.js","webpack://math-book-answers/./node_modules/@mui/material/node_modules/react-is/index.js","webpack://math-book-answers/./src/pages/mathmd.tsx","webpack://math-book-answers/./node_modules/@mui/material/Collapse/collapseClasses.js","webpack://math-book-answers/./node_modules/@mui/material/Collapse/Collapse.js","webpack://math-book-answers/./node_modules/@mui/material/Accordion/AccordionContext.js","webpack://math-book-answers/./node_modules/@mui/material/Accordion/accordionClasses.js","webpack://math-book-answers/./node_modules/@mui/material/Accordion/Accordion.js","webpack://math-book-answers/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://math-book-answers/./node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","webpack://math-book-answers/./node_modules/@mui/material/AccordionSummary/AccordionSummary.js","webpack://math-book-answers/./node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","webpack://math-book-answers/./node_modules/@mui/material/AccordionDetails/AccordionDetails.js","webpack://math-book-answers/./node_modules/fp-ts/es6/Ord.js","webpack://math-book-answers/./node_modules/fp-ts/es6/Semigroup.js","webpack://math-book-answers/./node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js","webpack://math-book-answers/./node_modules/fp-ts/es6/NonEmptyArray.js","webpack://math-book-answers/./node_modules/fp-ts/es6/Separated.js","webpack://math-book-answers/./node_modules/fp-ts/es6/ReadonlyArray.js","webpack://math-book-answers/./node_modules/fp-ts/es6/Array.js","webpack://math-book-answers/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://math-book-answers/./node_modules/@mui/material/Divider/Divider.js","webpack://math-book-answers/./node_modules/fp-ts/es6/ReadonlyTuple.js","webpack://math-book-answers/./node_modules/fp-ts/es6/Tuple.js","webpack://math-book-answers/./node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","webpack://math-book-answers/./node_modules/@mui/material/CardActionArea/CardActionArea.js","webpack://math-book-answers/./src/pages/recursive.tsx","webpack://math-book-answers/./src/state/hooks.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"\n}), 'Share');\n\nexports.default = _default;","import _defineProperty from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  var childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce(function (output, child, index) {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: \"separator-\".concat(index)\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nvar getSideFromDirection = function getSideFromDirection(direction) {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport var style = function style(_ref) {\n  var ownerState = _ref.ownerState,\n      theme = _ref.theme;\n\n  var styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme: theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), function (propValue) {\n    return {\n      flexDirection: propValue\n    };\n  }));\n\n  if (ownerState.spacing) {\n    var transformer = createUnarySpacing(theme);\n    var base = Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    var directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base: base\n    });\n    var spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base: base\n    });\n\n    var styleFromPropValue = function styleFromPropValue(propValue, breakpoint) {\n      return {\n        '& > :not(style) + :not(style)': _defineProperty({\n          margin: 0\n        }, \"margin\".concat(getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)), getValue(transformer, propValue))\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme: theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nvar StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [styles.root];\n  }\n})(style);\nvar Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  var props = extendSxProp(themeProps);\n\n  var _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'column' : _props$direction,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      divider = props.divider,\n      children = props.children,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = {\n    direction: direction,\n    spacing: spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Stack;","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar b = 60103,\n    c = 60106,\n    d = 60107,\n    e = 60108,\n    f = 60114,\n    g = 60109,\n    h = 60110,\n    k = 60112,\n    l = 60113,\n    m = 60120,\n    n = 60115,\n    p = 60116,\n    q = 60121,\n    r = 60122,\n    u = 60117,\n    v = 60129,\n    w = 60131;\n\nif (\"function\" === typeof Symbol && Symbol.for) {\n  var x = Symbol.for;\n  b = x(\"react.element\");\n  c = x(\"react.portal\");\n  d = x(\"react.fragment\");\n  e = x(\"react.strict_mode\");\n  f = x(\"react.profiler\");\n  g = x(\"react.provider\");\n  h = x(\"react.context\");\n  k = x(\"react.forward_ref\");\n  l = x(\"react.suspense\");\n  m = x(\"react.suspense_list\");\n  n = x(\"react.memo\");\n  p = x(\"react.lazy\");\n  q = x(\"react.block\");\n  r = x(\"react.server.block\");\n  u = x(\"react.fundamental\");\n  v = x(\"react.debug_trace_mode\");\n  w = x(\"react.legacy_hidden\");\n}\n\nfunction y(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var t = a.$$typeof;\n\n    switch (t) {\n      case b:\n        switch (a = a.type, a) {\n          case d:\n          case f:\n          case e:\n          case l:\n          case m:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case h:\n              case k:\n              case p:\n              case n:\n              case g:\n                return a;\n\n              default:\n                return t;\n            }\n\n        }\n\n      case c:\n        return t;\n    }\n  }\n}\n\nvar z = g,\n    A = b,\n    B = k,\n    C = d,\n    D = p,\n    E = n,\n    F = c,\n    G = f,\n    H = e,\n    I = l;\nexports.ContextConsumer = h;\nexports.ContextProvider = z;\nexports.Element = A;\nexports.ForwardRef = B;\nexports.Fragment = C;\nexports.Lazy = D;\nexports.Memo = E;\nexports.Portal = F;\nexports.Profiler = G;\nexports.StrictMode = H;\nexports.Suspense = I;\n\nexports.isAsyncMode = function () {\n  return !1;\n};\n\nexports.isConcurrentMode = function () {\n  return !1;\n};\n\nexports.isContextConsumer = function (a) {\n  return y(a) === h;\n};\n\nexports.isContextProvider = function (a) {\n  return y(a) === g;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === b;\n};\n\nexports.isForwardRef = function (a) {\n  return y(a) === k;\n};\n\nexports.isFragment = function (a) {\n  return y(a) === d;\n};\n\nexports.isLazy = function (a) {\n  return y(a) === p;\n};\n\nexports.isMemo = function (a) {\n  return y(a) === n;\n};\n\nexports.isPortal = function (a) {\n  return y(a) === c;\n};\n\nexports.isProfiler = function (a) {\n  return y(a) === f;\n};\n\nexports.isStrictMode = function (a) {\n  return y(a) === e;\n};\n\nexports.isSuspense = function (a) {\n  return y(a) === l;\n};\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || \"object\" === typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r) ? !0 : !1;\n};\n\nexports.typeOf = y;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","import * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function MathMD(props: {\n  htmlString: string;\n  posixTime: number;\n}) {\n  const rr = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (rr.current) {\n      var mathElements = rr.current.getElementsByClassName(\"math\");\n      var macros: any[] = [];\n      for (var i = 0; i < mathElements.length; i++) {\n        var texText = mathElements[i].firstChild;\n        if (mathElements[i].tagName == \"SPAN\") {\n          katex.render((texText as any).data, mathElements[i], {\n            displayMode: mathElements[i].classList.contains(\"display\"),\n            throwOnError: false,\n            macros: macros,\n            fleqn: false,\n          });\n        }\n      }\n    }\n  }, [rr]);\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div ref={rr} dangerouslySetInnerHTML={{ __html: props.htmlString }} />\n      <Typography\n        variant=\"caption\"\n        style={{ bottom: 1, right: 1, position: \"absolute\" }}\n      >\n        {new Date(props.posixTime * 1000).toDateString()}\n      </Typography>\n    </div>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCollapseUtilityClass(slot) {\n  return generateUtilityClass('MuiCollapse', slot);\n}\nvar collapseClasses = generateUtilityClasses('MuiCollapse', ['root', 'horizontal', 'vertical', 'entered', 'hidden', 'wrapper', 'wrapperInner']);\nexport default collapseClasses;","import _defineProperty from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addEndListener\", \"children\", \"className\", \"collapsedSize\", \"component\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Transition } from 'react-transition-group';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport { getCollapseUtilityClass } from './collapseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var orientation = ownerState.orientation,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', \"\".concat(orientation)],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', \"\".concat(orientation)],\n    wrapperInner: ['wrapperInner', \"\".concat(orientation)]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nvar CollapseRoot = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  return _extends({\n    height: 0,\n    overflow: 'hidden',\n    transition: theme.transitions.create('height')\n  }, ownerState.orientation === 'horizontal' && {\n    height: 'auto',\n    width: 0,\n    transition: theme.transitions.create('width')\n  }, ownerState.state === 'entered' && _extends({\n    height: 'auto',\n    overflow: 'visible'\n  }, ownerState.orientation === 'horizontal' && {\n    width: 'auto'\n  }), ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && {\n    visibility: 'hidden'\n  });\n});\nvar CollapseWrapper = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.wrapper;\n  }\n})(function (_ref2) {\n  var ownerState = _ref2.ownerState;\n  return _extends({\n    // Hack to get children with a negative margin to not falsify the height computation.\n    display: 'flex',\n    width: '100%'\n  }, ownerState.orientation === 'horizontal' && {\n    width: 'auto',\n    height: '100%'\n  });\n});\nvar CollapseWrapperInner = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.wrapperInner;\n  }\n})(function (_ref3) {\n  var ownerState = _ref3.ownerState;\n  return _extends({\n    width: '100%'\n  }, ownerState.orientation === 'horizontal' && {\n    width: 'auto',\n    height: '100%'\n  });\n});\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n\n  var addEndListener = props.addEndListener,\n      _children = props.children,\n      className = props.className,\n      _props$collapsedSize = props.collapsedSize,\n      collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize,\n      component = props.component,\n      easing = props.easing,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'vertical' : _props$orientation,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    orientation: orientation,\n    collapsedSize: collapsedSizeProp\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedSize = typeof collapsedSizeProp === 'number' ? \"\".concat(collapsedSizeProp, \"px\") : collapsedSizeProp;\n  var isHorizontal = orientation === 'horizontal';\n  var size = isHorizontal ? 'width' : 'height';\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  var nodeRef = React.useRef(null);\n  var handleRef = useForkRef(ref, nodeRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (maybeIsAppearing) {\n      if (callback) {\n        var node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n        if (maybeIsAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, maybeIsAppearing);\n        }\n      }\n    };\n  };\n\n  var getWrapperSize = function getWrapperSize() {\n    return wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout,\n      easing: easing\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        transitionTimingFunction = _getTransitionProps.easing;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style[size] = \"\".concat(wrapperSize, \"px\");\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  var handleExit = normalizedTransitionCallback(function (node) {\n    node.style[size] = \"\".concat(getWrapperSize(), \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  var handleExiting = normalizedTransitionCallback(function (node) {\n    var wrapperSize = getWrapperSize();\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout,\n      easing: easing\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        transitionTimingFunction = _getTransitionProps2.easing;\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  var handleAddEndListener = function handleAddEndListener(next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other, {\n    children: function children(state, childProps) {\n      return /*#__PURE__*/_jsx(CollapseRoot, _extends({\n        as: component,\n        className: clsx(classes.root, className, {\n          'entered': classes.entered,\n          'exited': !inProp && collapsedSize === '0px' && classes.hidden\n        }[state]),\n        style: _extends(_defineProperty({}, isHorizontal ? 'minWidth' : 'minHeight', collapsedSize), style),\n        ownerState: _extends({}, ownerState, {\n          state: state\n        }),\n        ref: handleRef\n      }, childProps, {\n        children: /*#__PURE__*/_jsx(CollapseWrapper, {\n          ownerState: _extends({}, ownerState, {\n            state: state\n          }),\n          className: classes.wrapper,\n          ref: wrapperRef,\n          children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n            ownerState: _extends({}, ownerState, {\n              state: state\n            }),\n            className: classes.wrapperInner,\n            children: _children\n          })\n        })\n      }));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nvar accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","import _toArray from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _slicedToArray from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      square = ownerState.square,\n      expanded = ownerState.expanded,\n      disabled = ownerState.disabled,\n      disableGutters = ownerState.disableGutters;\n  var slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nvar AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [_defineProperty({}, \"& .\".concat(accordionClasses.region), styles.region), styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(function (_ref2) {\n  var _ref3;\n\n  var theme = _ref2.theme;\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _ref3 = {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: theme.palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    }\n  }, _defineProperty(_ref3, \"&.\".concat(accordionClasses.expanded), {\n    '&:before': {\n      opacity: 0\n    },\n    '&:first-of-type': {\n      marginTop: 0\n    },\n    '&:last-of-type': {\n      marginBottom: 0\n    },\n    '& + &': {\n      '&:before': {\n        display: 'none'\n      }\n    }\n  }), _defineProperty(_ref3, \"&.\".concat(accordionClasses.disabled), {\n    backgroundColor: theme.palette.action.disabledBackground\n  }), _ref3;\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      ownerState = _ref4.ownerState;\n  return _extends({}, !ownerState.square && {\n    borderRadius: 0,\n    '&:first-of-type': {\n      borderTopLeftRadius: theme.shape.borderRadius,\n      borderTopRightRadius: theme.shape.borderRadius\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: theme.shape.borderRadius,\n      borderBottomRightRadius: theme.shape.borderRadius,\n      // Fix a rendering issue on Edge\n      '@supports (-ms-ime-align: auto)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  }, !ownerState.disableGutters && _defineProperty({}, \"&.\".concat(accordionClasses.expanded), {\n    margin: '16px 0'\n  }));\n});\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  var childrenProp = props.children,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      disableGutters: disableGutters,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, disableGutters, handleChange]);\n\n  var ownerState = _extends({}, props, {\n    square: square,\n    disabled: disabled,\n    disableGutters: disableGutters,\n    expanded: expanded\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Accordion;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nvar accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import _defineProperty from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      expanded = ownerState.expanded,\n      disabled = ownerState.disabled,\n      disableGutters = ownerState.disableGutters;\n  var slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nvar AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref) {\n  var _extends2;\n\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends((_extends2 = {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition)\n  }, _defineProperty(_extends2, \"&.\".concat(accordionSummaryClasses.focusVisible), {\n    backgroundColor: theme.palette.action.focus\n  }), _defineProperty(_extends2, \"&.\".concat(accordionSummaryClasses.disabled), {\n    opacity: theme.palette.action.disabledOpacity\n  }), _defineProperty(_extends2, \"&:hover:not(.\".concat(accordionSummaryClasses.disabled, \")\"), {\n    cursor: 'pointer'\n  }), _extends2), !ownerState.disableGutters && _defineProperty({}, \"&.\".concat(accordionSummaryClasses.expanded), {\n    minHeight: 64\n  }));\n});\nvar AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.content;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme,\n      ownerState = _ref3.ownerState;\n  return _extends({\n    display: 'flex',\n    flexGrow: 1,\n    margin: '12px 0'\n  }, !ownerState.disableGutters && _defineProperty({\n    transition: theme.transitions.create(['margin'], {\n      duration: theme.transitions.duration.shortest\n    })\n  }, \"&.\".concat(accordionSummaryClasses.expanded), {\n    margin: '20px 0'\n  }));\n});\nvar AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.expandIconWrapper;\n  }\n})(function (_ref5) {\n  var theme = _ref5.theme;\n  return _defineProperty({\n    display: 'flex',\n    color: theme.palette.action.active,\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  }, \"&.\".concat(accordionSummaryClasses.expanded), {\n    transform: 'rotate(180deg)'\n  });\n});\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  var children = props.children,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onClick = props.onClick,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      disableGutters = _React$useContext.disableGutters,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var ownerState = _extends({}, props, {\n    expanded: expanded,\n    disabled: disabled,\n    disableGutters: disableGutters\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default AccordionSummary;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nvar accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\n\nvar AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    padding: theme.spacing(1, 2, 2)\n  };\n});\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n\n  var className = props.className,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = props;\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default AccordionDetails;","import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function'; // -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n\n/**\n * @category defaults\n * @since 2.10.0\n */\n\nexport var equalsDefault = function equalsDefault(compare) {\n  return function (first, second) {\n    return first === second || compare(first, second) === 0;\n  };\n}; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.0.0\n */\n\nexport var fromCompare = function fromCompare(_compare) {\n  return {\n    equals: equalsDefault(_compare),\n    compare: function compare(first, second) {\n      return first === second ? 0 : _compare(first, second);\n    }\n  };\n}; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var tuple = function tuple() {\n  var ords = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    ords[_i] = arguments[_i];\n  }\n\n  return fromCompare(function (first, second) {\n    var i = 0;\n\n    for (; i < ords.length - 1; i++) {\n      var r = ords[i].compare(first[i], second[i]);\n\n      if (r !== 0) {\n        return r;\n      }\n    }\n\n    return ords[i].compare(first[i], second[i]);\n  });\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nexport var reverse = function reverse(O) {\n  return fromCompare(function (first, second) {\n    return O.compare(second, first);\n  });\n}; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar contramap_ = function contramap_(fa, f) {\n  return pipe(fa, contramap(f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Contravariant\n * @since 2.0.0\n */\n\n\nexport var contramap = function contramap(f) {\n  return function (fa) {\n    return fromCompare(function (first, second) {\n      return fa.compare(f(first), f(second));\n    });\n  };\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return fromCompare(function (a, b) {\n        var ox = first.compare(a, b);\n        return ox !== 0 ? ox : second.compare(a, b);\n      });\n    }\n  };\n};\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\n\nexport var getMonoid = function getMonoid() {\n  return {\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () {\n      return 0;\n    })\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Contravariant = {\n  URI: URI,\n  contramap: contramap_\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.11.0\n */\n\nexport var trivial = {\n  equals: constTrue,\n  compare: /*#__PURE__*/constant(0)\n};\n/**\n * @since 2.11.0\n */\n\nexport var equals = function equals(O) {\n  return function (second) {\n    return function (first) {\n      return first === second || O.compare(first, second) === 0;\n    };\n  };\n}; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\n\nexport var lt = function lt(O) {\n  return function (first, second) {\n    return O.compare(first, second) === -1;\n  };\n}; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nexport var gt = function gt(O) {\n  return function (first, second) {\n    return O.compare(first, second) === 1;\n  };\n}; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\n\nexport var leq = function leq(O) {\n  return function (first, second) {\n    return O.compare(first, second) !== 1;\n  };\n}; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nexport var geq = function geq(O) {\n  return function (first, second) {\n    return O.compare(first, second) !== -1;\n  };\n}; // TODO: curry in v3\n\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nexport var min = function min(O) {\n  return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n  };\n}; // TODO: curry in v3\n\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nexport var max = function max(O) {\n  return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n  };\n};\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\n\nexport var clamp = function clamp(O) {\n  var minO = min(O);\n  var maxO = max(O);\n  return function (low, hi) {\n    return function (a) {\n      return maxO(minO(a, hi), low);\n    };\n  };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\n\nexport var between = function between(O) {\n  var ltO = lt(O);\n  var gtO = gt(O);\n  return function (low, hi) {\n    return function (a) {\n      return ltO(a, low) || gtO(a, hi) ? false : true;\n    };\n  };\n}; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var ord = Contravariant; // default compare for primitive types\n\nfunction compare(first, second) {\n  return first < second ? -1 : first > second ? 1 : 0;\n}\n\nvar strictOrd = {\n  equals: eqStrict.equals,\n  compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var ordDate = /*#__PURE__*/pipe(ordNumber, /*#__PURE__*/contramap(function (date) {\n  return date.valueOf();\n}));","/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord'; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var min = function min(O) {\n  return {\n    concat: Or.min(O)\n  };\n};\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var max = function max(O) {\n  return {\n    concat: Or.max(O)\n  };\n};\n/**\n * @category constructors\n * @since 2.10.0\n */\n\nexport var constant = function constant(a) {\n  return {\n    concat: function concat() {\n      return a;\n    }\n  };\n}; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var struct = function struct(semigroups) {\n  return {\n    concat: function concat(first, second) {\n      var r = {};\n\n      for (var k in semigroups) {\n        if (_.has.call(semigroups, k)) {\n          r[k] = semigroups[k].concat(first[k], second[k]);\n        }\n      }\n\n      return r;\n    }\n  };\n};\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var tuple = function tuple() {\n  var semigroups = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    semigroups[_i] = arguments[_i];\n  }\n\n  return {\n    concat: function concat(first, second) {\n      return semigroups.map(function (s, i) {\n        return s.concat(first[i], second[i]);\n      });\n    }\n  };\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var intercalate = function intercalate(middle) {\n  return function (S) {\n    return {\n      concat: function concat(x, y) {\n        return S.concat(x, S.concat(middle, y));\n      }\n    };\n  };\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexport var first = function first() {\n  return {\n    concat: identity\n  };\n};\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n\nexport var last = function last() {\n  return {\n    concat: function concat(_, y) {\n      return y;\n    }\n  };\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\n\nexport var concatAll = M.concatAll; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getObjectSemigroup = function getObjectSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return Object.assign({}, first, second);\n    }\n  };\n};\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n  var concatAllS = concatAll(S);\n  return function (startWith, as) {\n    return as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as);\n  };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupAll = {\n  concat: function concat(x, y) {\n    return x && y;\n  }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupAny = {\n  concat: function concat(x, y) {\n    return x || y;\n  }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupString = {\n  concat: function concat(x, y) {\n    return x + y;\n  }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupSum = {\n  concat: function concat(x, y) {\n    return x + y;\n  }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var semigroupProduct = {\n  concat: function concat(x, y) {\n    return x * y;\n  }\n};","var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { identity, pipe, SK } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup'; // -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n\n/**\n * @internal\n */\n\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\n\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\n\nexport var isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n/**\n * @internal\n */\n\nexport var prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail);\n  };\n};\n/**\n * @internal\n */\n\nexport var prepend = prependW;\n/**\n * @internal\n */\n\nexport var appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init), [end]);\n  };\n};\n/**\n * @internal\n */\n\nexport var append = appendW;\n/**\n * @internal\n */\n\nexport var unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (isNonEmpty(as)) {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n\n    xs.splice(i, 0, a);\n    return xs;\n  }\n\n  return [a];\n};\n/**\n * @internal\n */\n\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = _.fromReadonlyNonEmptyArray(as);\n\n    xs[i] = a;\n    return xs;\n  }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return as;\n    }\n\n    var out = [head(as)];\n    var rest = tail(as);\n\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n\n      _loop_1(a);\n    }\n\n    return out;\n  };\n};\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var sortBy = function sortBy(ords) {\n  if (isNonEmpty(ords)) {\n    var M = getMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n  }\n\n  return identity;\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var union = function union(E) {\n  var uniqE = uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(pipe(first, concat(second)));\n    };\n  };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n      return as;\n    }\n\n    if (m < 0) {\n      var _a = splitAt(-m)(as),\n          f = _a[0],\n          s = _a[1];\n\n      return pipe(s, concat(f));\n    } else {\n      return rotate(m - len)(as);\n    }\n  };\n}; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport var fromReadonlyArray = function fromReadonlyArray(as) {\n  return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n\n    return out;\n  };\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var replicate = function replicate(a) {\n  return makeBy(function () {\n    return a;\n  });\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var range = function range(start, end) {\n  return start <= end ? makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n}; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport var unprepend = function unprepend(as) {\n  return [head(as), tail(as)];\n};\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport var unappend = function unappend(as) {\n  return [init(as), last(as)];\n}; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * @category interop\n * @since 2.5.0\n */\n\nexport var fromArray = function fromArray(as) {\n  return fromReadonlyArray(as.slice());\n};\nexport function concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\nexport function concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var reverse = function reverse(as) {\n  return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse());\n};\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n\n    if (len === 0) {\n      return empty;\n    }\n\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n\n    out.push(nea);\n    return out;\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n\n      if (out.hasOwnProperty(k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n\n    return out;\n  };\n};\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n  };\n};\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n\n  return cs;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n\n    return out;\n  };\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n  };\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n        b = _a[0],\n        rest = _a[1];\n\n    var out = [b];\n    var next = rest;\n\n    while (isNonEmpty(next)) {\n      var _b = f(next),\n          b_1 = _b[0],\n          rest_2 = _b[1];\n\n      out.push(b_1);\n      next = rest_2;\n    }\n\n    return out;\n  };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n  };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chunksOf = function chunksOf(n) {\n  return chop(splitAt(n));\n}; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.5.0\n */\n\n\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nexport var altW = function altW(that) {\n  return function (as) {\n    return pipe(as, concatW(that()));\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\n\nexport var alt = altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\n\nexport var ap = function ap(as) {\n  return chain(function (f) {\n    return pipe(as, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nexport var chain = function chain(f) {\n  return chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nexport var extend = function extend(f) {\n  return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n\n    while (isNonEmpty(next)) {\n      out.push(f(next));\n      next = tail(next);\n    }\n\n    return out;\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nexport var map = function map(f) {\n  return mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, head(as))];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduce = function reduce(b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var foldMap = function foldMap(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a) {\n        return S.concat(s, f(a));\n      }, f(as[0]));\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduceRight = function reduceRight(b, f) {\n  return reduceRightWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (as) {\n    return as.reduce(function (b, a, i) {\n      return f(i, b, a);\n    }, b);\n  };\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var foldMapWithIndex = function foldMapWithIndex(S) {\n  return function (f) {\n    return function (as) {\n      return as.slice(1).reduce(function (s, a, i) {\n        return S.concat(s, f(i + 1, a));\n      }, f(0, as[0]));\n    };\n  };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (as) {\n    return as.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return traverseWithIndex(F)(SK);\n};\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, head(as)), of);\n\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return pipe(bs, append(b));\n          };\n        }), f(i, as[i]));\n      }\n\n      return out;\n    };\n  };\n};\n/**\n * @category Comonad\n * @since 2.6.3\n */\n\nexport var extract = _.head; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n};\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getEq = function getEq(E) {\n  return fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\n/**\n * @since 2.8.0\n */\n\nexport var bind = /*#__PURE__*/bind_(Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = /*#__PURE__*/apS_(Apply); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.5.0\n */\n\nexport var head = extract;\n/**\n * @since 2.5.0\n */\n\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\n\nexport var last = function last(as) {\n  return as[as.length - 1];\n};\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\n\nexport var init = function init(as) {\n  return as.slice(0, -1);\n};\n/**\n * @since 2.5.0\n */\n\nexport var min = function min(O) {\n  var S = Se.min(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * @since 2.5.0\n */\n\nexport var max = function max(O) {\n  var S = Se.max(O);\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * @since 2.10.0\n */\n\nexport var concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(head(as), tail(as));\n  };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchRight = function matchRight(f) {\n  return function (as) {\n    return f(init(as), last(as));\n  };\n};\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nexport var modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(head(as))], tail(as));\n  };\n};\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var updateHead = function updateHead(a) {\n  return modifyHead(function () {\n    return a;\n  });\n};\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nexport var modifyLast = function modifyLast(f) {\n  return function (as) {\n    return pipe(init(as), append(f(last(as))));\n  };\n};\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var updateLast = function updateLast(a) {\n  return modifyLast(function () {\n    return a;\n  });\n};\nexport function groupSort(O) {\n  var sortO = sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return isNonEmpty(as) ? groupO(sortO(as)) : empty;\n  };\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nexport var filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return fromReadonlyArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\n\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\n\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n  return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexport var snoc = function snoc(init, end) {\n  return pipe(init, concat([end]));\n};\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\n\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexport var fold = concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexport var readonlyNonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray'; // -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n\n/**\n * @internal\n */\n\nexport var isNonEmpty = function isNonEmpty(as) {\n  return as.length > 0;\n};\n/**\n * @internal\n */\n\nexport var isOutOfBound = function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n};\n/**\n * @internal\n */\n\nexport var prependW = function prependW(head) {\n  return function (tail) {\n    return __spreadArray([head], tail);\n  };\n};\n/**\n * @internal\n */\n\nexport var prepend = prependW;\n/**\n * @internal\n */\n\nexport var appendW = function appendW(end) {\n  return function (init) {\n    return __spreadArray(__spreadArray([], init), [end]);\n  };\n};\n/**\n * @internal\n */\n\nexport var append = appendW;\n/**\n * @internal\n */\n\nexport var unsafeInsertAt = function unsafeInsertAt(i, a, as) {\n  if (isNonEmpty(as)) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs.splice(i, 0, a);\n    return xs;\n  }\n\n  return [a];\n};\n/**\n * @internal\n */\n\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  var xs = fromReadonlyNonEmptyArray(as);\n  xs[i] = a;\n  return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var uniq = function uniq(E) {\n  return function (as) {\n    if (as.length === 1) {\n      return copy(as);\n    }\n\n    var out = [head(as)];\n    var rest = tail(as);\n\n    var _loop_1 = function _loop_1(a) {\n      if (out.every(function (o) {\n        return !E.equals(o, a);\n      })) {\n        out.push(a);\n      }\n    };\n\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n      var a = rest_1[_i];\n\n      _loop_1(a);\n    }\n\n    return out;\n  };\n};\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var sortBy = function sortBy(ords) {\n  if (isNonEmpty(ords)) {\n    var M = getMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n  }\n\n  return copy;\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var union = function union(E) {\n  var uniqE = uniq(E);\n  return function (second) {\n    return function (first) {\n      return uniqE(pipe(first, concat(second)));\n    };\n  };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var rotate = function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n      return copy(as);\n    }\n\n    if (m < 0) {\n      var _a = splitAt(-m)(as),\n          f = _a[0],\n          s = _a[1];\n\n      return pipe(s, concat(f));\n    } else {\n      return rotate(m - len)(as);\n    }\n  };\n}; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.10.0\n */\n\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexport var fromArray = function fromArray(as) {\n  return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var makeBy = function makeBy(f) {\n  return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n\n    for (var i = 1; i < j; i++) {\n      out.push(f(i));\n    }\n\n    return out;\n  };\n};\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var replicate = function replicate(a) {\n  return makeBy(function () {\n    return a;\n  });\n};\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var range = function range(start, end) {\n  return start <= end ? makeBy(function (i) {\n    return start + i;\n  })(end - start + 1) : [start];\n}; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport var unprepend = function unprepend(as) {\n  return [head(as), tail(as)];\n};\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\n\nexport var unappend = function unappend(as) {\n  return [init(as), last(as)];\n};\nexport function concatW(second) {\n  return function (first) {\n    return first.concat(second);\n  };\n}\nexport function concat(x, y) {\n  return y ? x.concat(y) : function (y) {\n    return y.concat(x);\n  };\n}\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var reverse = function reverse(as) {\n  return __spreadArray([last(as)], as.slice(0, -1).reverse());\n};\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n\n    if (len === 0) {\n      return [];\n    }\n\n    var out = [];\n    var head = as[0];\n    var nea = [head];\n\n    for (var i = 1; i < len; i++) {\n      var a = as[i];\n\n      if (E.equals(a, head)) {\n        nea.push(a);\n      } else {\n        out.push(nea);\n        head = a;\n        nea = [head];\n      }\n    }\n\n    out.push(nea);\n    return out;\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var groupBy = function groupBy(f) {\n  return function (as) {\n    var out = {};\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n\n      if (out.hasOwnProperty(k)) {\n        out[k].push(a);\n      } else {\n        out[k] = [a];\n      }\n    }\n\n    return out;\n  };\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.slice().sort(O.compare);\n  };\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\n\nexport var of = function of(a) {\n  return [a];\n};\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var zipWith = function zipWith(as, bs, f) {\n  var cs = [f(as[0], bs[0])];\n  var len = Math.min(as.length, bs.length);\n\n  for (var i = 1; i < len; i++) {\n    cs[i] = f(as[i], bs[i]);\n  }\n\n  return cs;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\n\nexport var unzip = function unzip(abs) {\n  var fa = [abs[0][0]];\n  var fb = [abs[0][1]];\n\n  for (var i = 1; i < abs.length; i++) {\n    fa[i] = abs[i][0];\n    fb[i] = abs[i][1];\n  }\n\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var prependAll = function prependAll(middle) {\n  return function (as) {\n    var out = [middle, as[0]];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(middle, as[i]);\n    }\n\n    return out;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var intersperse = function intersperse(middle) {\n  return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n  };\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n\n    for (var i = 1; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chop = function chop(f) {\n  return function (as) {\n    var _a = f(as),\n        b = _a[0],\n        rest = _a[1];\n\n    var out = [b];\n    var next = rest;\n\n    while (isNonEmpty(next)) {\n      var _b = f(next),\n          b_1 = _b[0],\n          rest_2 = _b[1];\n\n      out.push(b_1);\n      next = rest_2;\n    }\n\n    return out;\n  };\n};\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n  };\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\n\nexport var chunksOf = function chunksOf(n) {\n  return chop(splitAt(n));\n}; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\n/* istanbul ignore next */\n\n\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\n\nexport var altW = function altW(that) {\n  return function (as) {\n    return pipe(as, concatW(that()));\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\n\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nexport var ap = function ap(as) {\n  return chain(function (f) {\n    return pipe(as, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nexport var chain = function chain(f) {\n  return chainWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nexport var extend = function extend(f) {\n  return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n\n    while (isNonEmpty(next)) {\n      out.push(f(next));\n      next = tail(next);\n    }\n\n    return out;\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\nexport var map = function map(f) {\n  return mapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (as) {\n    var out = [f(0, head(as))];\n\n    for (var i = 1; i < as.length; i++) {\n      out.push(f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return traverseWithIndex(F)(function (_, a) {\n    return a;\n  });\n};\n/**\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return function (as) {\n      var out = F.map(f(0, head(as)), of);\n\n      for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) {\n          return function (b) {\n            return pipe(bs, append(b));\n          };\n        }), f(i, as[i]));\n      }\n\n      return out;\n    };\n  };\n};\n/**\n * @since 2.7.0\n */\n\nexport var extract = RNEA.head; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: concat\n  };\n};\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n}; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\n/**\n * @since 2.8.0\n */\n\nexport var bind = /*#__PURE__*/bind_(Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = /*#__PURE__*/apS_(Apply); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.0.0\n */\n\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\n\nexport var tail = function tail(as) {\n  return as.slice(1);\n};\n/**\n * @since 2.0.0\n */\n\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\n\nexport var init = function init(as) {\n  return as.slice(0, -1);\n};\n/**\n * @since 2.0.0\n */\n\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\n\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\n\nexport var concatAll = function concatAll(S) {\n  return function (as) {\n    return as.reduce(S.concat);\n  };\n};\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchLeft = function matchLeft(f) {\n  return function (as) {\n    return f(head(as), tail(as));\n  };\n};\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchRight = function matchRight(f) {\n  return function (as) {\n    return f(init(as), last(as));\n  };\n};\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nexport var modifyHead = function modifyHead(f) {\n  return function (as) {\n    return __spreadArray([f(head(as))], tail(as));\n  };\n};\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var updateHead = function updateHead(a) {\n  return modifyHead(function () {\n    return a;\n  });\n};\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\n\nexport var modifyLast = function modifyLast(f) {\n  return function (as) {\n    return pipe(init(as), append(f(last(as))));\n  };\n};\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\n\nexport var updateLast = function updateLast(a) {\n  return modifyLast(function () {\n    return a;\n  });\n};\nexport function groupSort(O) {\n  var sortO = sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return isNonEmpty(as) ? groupO(sortO(as)) : [];\n  };\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexport var filterWithIndex = function filterWithIndex(predicate) {\n  return function (as) {\n    return fromArray(as.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\n\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\n\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n  return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var snoc = function snoc(init, end) {\n  return pipe(init, append(end));\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexport var fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var nonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  ap: _ap,\n  chain: _chain,\n  extend: _extend,\n  extract: extract,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  alt: _alt\n};","/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor'; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.10.0\n */\n\nexport var separated = function separated(left, right) {\n  return {\n    left: left,\n    right: right\n  };\n}; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n\nvar _mapLeft = function _mapLeft(fa, f) {\n  return pipe(fa, mapLeft(f));\n};\n\nvar _bimap = function _bimap(fa, g, f) {\n  return pipe(fa, bimap(g, f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\n\n\nexport var map = function map(f) {\n  return function (fa) {\n    return separated(left(fa), f(right(fa)));\n  };\n};\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nexport var mapLeft = function mapLeft(f) {\n  return function (fa) {\n    return separated(f(left(fa)), right(fa));\n  };\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nexport var bimap = function bimap(f, g) {\n  return function (fa) {\n    return separated(f(left(fa)), g(right(fa)));\n  };\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Bifunctor = {\n  URI: URI,\n  mapLeft: _mapLeft,\n  bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor); // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.10.0\n */\n\nexport var left = function left(s) {\n  return s.left;\n};\n/**\n * @since 2.10.0\n */\n\nexport var right = function right(s) {\n  return s.right;\n};","var __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero'; // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\n\nexport var isEmpty = function isEmpty(as) {\n  return as.length === 0;\n};\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\n\nexport var isNonEmpty = RNEA.isNonEmpty; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport var makeBy = function makeBy(n, f) {\n  return n <= 0 ? empty : RNEA.makeBy(f)(n);\n};\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nexport var replicate = function replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n};\nexport function fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? [a] : empty;\n  };\n} // -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n\n/**\n * @category natural transformations\n * @since 2.11.0\n */\n\nexport var fromOption = function fromOption(ma) {\n  return _.isNone(ma) ? empty : [ma.value];\n};\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nexport var fromEither = function fromEither(e) {\n  return _.isLeft(e) ? empty : [e.right];\n}; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchW = function matchW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n  };\n};\n/**\n * @category destructors\n * @since 2.11.0\n */\n\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchLeftW = function matchLeftW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n  };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchRightW = function matchRightW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n  };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\n\nexport var foldRight = matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * @category combinators\n * @since 2.7.0\n */\n\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    if (isEmpty(as)) {\n      return empty;\n    }\n\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\n\nexport var size = function size(as) {\n  return as.length;\n};\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nexport var head = function head(as) {\n  return isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none;\n};\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nexport var last = function last(as) {\n  return isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none;\n};\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nexport var tail = function tail(as) {\n  return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nexport var init = function init(as) {\n  return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var takeLeft = function takeLeft(n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n  };\n};\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var takeRight = function takeRight(n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n  };\n};\nexport function takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    var len = out.length;\n    return len === as.length ? as : len === 0 ? empty : out;\n  };\n}\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nexport function spanLeft(predicate) {\n  return function (as) {\n    var _a = splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n  };\n};\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n  };\n};\nexport function dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? empty : as.slice(i);\n  };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nexport var findIndex = function findIndex(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n\n    return _.none;\n  };\n};\nexport function findFirst(predicate) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n\n    return _.none;\n  };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nexport var findFirstMap = function findFirstMap(f) {\n  return function (as) {\n    for (var i = 0; i < as.length; i++) {\n      var out = f(as[i]);\n\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n\n    return _.none;\n  };\n};\nexport function findLast(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(as[i]);\n      }\n    }\n\n    return _.none;\n  };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nexport var findLastMap = function findLastMap(f) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      var out = f(as[i]);\n\n      if (_.isSome(out)) {\n        return out;\n      }\n    }\n\n    return _.none;\n  };\n};\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nexport var findLastIndex = function findLastIndex(predicate) {\n  return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return _.some(i);\n      }\n    }\n\n    return _.none;\n  };\n};\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nexport var deleteAt = function deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n  };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var reverse = function reverse(as) {\n  return as.length <= 1 ? as : as.slice().reverse();\n};\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n}; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var prependAll = function prependAll(middle) {\n  var f = RNEA.prependAll(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var intersperse = function intersperse(middle) {\n  var f = RNEA.intersperse(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var rotate = function rotate(n) {\n  var f = RNEA.rotate(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\nexport function elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function predicate(element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n\n    for (; i < as.length; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var uniq = function uniq(E) {\n  var f = RNEA.uniq(E);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var sortBy = function sortBy(ords) {\n  var f = RNEA.sortBy(ords);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : as;\n  };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chop = function chop(f) {\n  var g = RNEA.chop(f);\n  return function (as) {\n    return isNonEmpty(as) ? g(as) : empty;\n  };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n  };\n};\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chunksOf = function chunksOf(n) {\n  var f = RNEA.chunksOf(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : empty;\n  };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var fromOptionK = function fromOptionK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return fromOption(f.apply(void 0, a));\n  };\n};\nexport function comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return isNonEmpty(input) ? pipe(RNEA.head(input), chain(function (x) {\n      return go(pipe(scope, append(x)), RNEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n  };\n\n  return go(empty, input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var concatW = function concatW(second) {\n  return function (first) {\n    return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n  };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var concat = concatW;\nexport function union(E) {\n  var unionE = RNEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (second) {\n        return unionE_1(second, first);\n      };\n    }\n\n    return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n  };\n}\nexport function intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexport function difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n} // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n\nvar _filter = function _filter(fa, predicate) {\n  return pipe(fa, filter(predicate));\n};\n\nvar _filterMap = function _filterMap(fa, f) {\n  return pipe(fa, filterMap(f));\n};\n\nvar _partition = function _partition(fa, predicate) {\n  return pipe(fa, partition(predicate));\n};\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return pipe(fa, partitionMap(f));\n};\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return pipe(fa, partitionMapWithIndex(f));\n};\n\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return pipe(fa, filterMapWithIndex(f));\n};\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return pipe(fa, filterWithIndex(predicateWithIndex));\n};\n\nvar _extend = function _extend(fa, f) {\n  return pipe(fa, extend(f));\n};\n\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/** @internal */\n\n\nexport var _chainRecDepthFirst = function _chainRecDepthFirst(a, f) {\n  return pipe(a, chainRecDepthFirst(f));\n};\n/** @internal */\n\nexport var _chainRecBreadthFirst = function _chainRecBreadthFirst(a, f) {\n  return pipe(a, chainRecBreadthFirst(f));\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Pointed\n * @since 2.5.0\n */\n\nexport var of = RNEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\n\nexport var zero = function zero() {\n  return empty;\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nexport var altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nexport var ap = function ap(fa) {\n  return chain(function (f) {\n    return pipe(fa, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nexport var chain = function chain(f) {\n  return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nexport var map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexport var separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return separated(left, right);\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var filter = function filter(predicate) {\n  return function (as) {\n    return as.filter(predicate);\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (_.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var filterMap = function filterMap(f) {\n  return filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexport var compact = /*#__PURE__*/filterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var partition = function partition(predicate) {\n  return partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (as) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var a = as[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return separated(left, right);\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nexport var partitionMap = function partitionMap(f) {\n  return partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return separated(left, right);\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nexport var filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (as) {\n    return as.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nexport var extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var foldMapWithIndex = function foldMapWithIndex(M) {\n  return function (f) {\n    return function (fa) {\n      return fa.reduce(function (b, a, i) {\n        return M.concat(b, f(i, a));\n      }, M.empty);\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduce = function reduce(b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var foldMap = function foldMap(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (fa) {\n    var len = fa.length;\n    var out = b;\n\n    for (var i = 0; i < len; i++) {\n      out = f(i, out, fa[i]);\n    }\n\n    return out;\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduceRight = function reduceRight(b, f) {\n  return reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nexport var reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return pipe(as, append(a));\n        };\n      }), fa);\n    });\n  };\n};\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return pipe(bs, append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wither = function wither(F) {\n  var _witherF = _wither(F);\n\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wilt = function wilt(F) {\n  var _wiltF = _wilt(F);\n\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nexport var unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (_.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var getShow = function getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n    }\n  };\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getMonoid = function getMonoid() {\n  return {\n    concat: getSemigroup().concat,\n    empty: empty\n  };\n};\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getEq = function getEq(E) {\n  return fromEquals(function (xs, ys) {\n    return xs.length === ys.length && xs.every(function (x, i) {\n      return E.equals(x, ys[i]);\n    });\n  });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nexport var getOrd = function getOrd(O) {\n  return fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return N.Ord.compare(aLen, bLen);\n  });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var getUnionMonoid = function getUnionMonoid(E) {\n  return {\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var getIntersectionSemigroup = function getIntersectionSemigroup(E) {\n  var intersectionE = intersection(E);\n  return {\n    concat: function concat(first, second) {\n      return intersectionE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var getDifferenceMagma = function getDifferenceMagma(E) {\n  var differenceE = difference(E);\n  return {\n    concat: function concat(first, second) {\n      return differenceE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Unfoldable = {\n  URI: URI,\n  unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var Zero = {\n  URI: URI,\n  zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\n\nexport var guard = /*#__PURE__*/guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alternative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  alt: _alt,\n  zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Extend = {\n  URI: URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Filterable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FilterableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexport var chainRecDepthFirst = function chainRecDepthFirst(f) {\n  return function (a) {\n    var todo = __spreadArray([], f(a));\n\n    var out = [];\n\n    while (todo.length > 0) {\n      var e = todo.shift();\n\n      if (_.isLeft(e)) {\n        todo.unshift.apply(todo, f(e.left));\n      } else {\n        out.push(e.right);\n      }\n    }\n\n    return out;\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var ChainRecDepthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexport var chainRecBreadthFirst = function chainRecBreadthFirst(f) {\n  return function (a) {\n    var initial = f(a);\n    var todo = [];\n    var out = [];\n\n    function go(e) {\n      if (_.isLeft(e)) {\n        f(e.left).forEach(function (v) {\n          return todo.push(v);\n        });\n      } else {\n        out.push(e.right);\n      }\n    }\n\n    for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n      var e = initial_1[_i];\n      go(e);\n    }\n\n    while (todo.length > 0) {\n      go(todo.shift());\n    }\n\n    return out;\n  };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var ChainRecBreadthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecBreadthFirst\n};\n\nvar _wither = /*#__PURE__*/witherDefault(Traversable, Compactable);\n\nvar _wilt = /*#__PURE__*/wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\n\n\nexport var Witherable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\n\nexport var filterE = /*#__PURE__*/filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var FromEither = {\n  URI: URI,\n  fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var fromEitherK = /*#__PURE__*/fromEitherK_(FromEither); // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nexport var unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}; // -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n\n/**\n * @category interop\n * @since 2.5.0\n */\n\nexport var toArray = function toArray(as) {\n  return as.slice();\n};\n/**\n * @category interop\n * @since 2.5.0\n */\n\nexport var fromArray = function fromArray(as) {\n  return isEmpty(as) ? empty : as.slice();\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexport var empty = RNEA.empty;\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nexport var every = function every(predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nexport var some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\n\nexport var exists = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\n/**\n * @since 2.8.0\n */\n\nexport var bind = /*#__PURE__*/bind_(Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = /*#__PURE__*/apS_(Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexport var readonlyArray = {\n  URI: URI,\n  compact: compact,\n  separate: separate,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: zero,\n  unfold: unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero'; // -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\n\nexport var isEmpty = function isEmpty(as) {\n  return as.length === 0;\n};\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\n\nexport var isNonEmpty = NEA.isNonEmpty; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\n\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\n\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexport var makeBy = function makeBy(n, f) {\n  return n <= 0 ? [] : NEA.makeBy(f)(n);\n};\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexport var replicate = function replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n};\nexport function fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? [a] : [];\n  };\n} // -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nexport var fromOption = function fromOption(ma) {\n  return _.isNone(ma) ? [] : [ma.value];\n};\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\n\nexport var fromEither = function fromEither(e) {\n  return _.isLeft(e) ? [] : [e.right];\n}; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchW = function matchW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n  };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchLeftW = function matchLeftW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n  };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\n\nexport var matchRightW = function matchRightW(onEmpty, onNonEmpty) {\n  return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n  };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\n\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var foldRight = matchRight; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\n\nexport var chainWithIndex = function chainWithIndex(f) {\n  return function (as) {\n    var out = [];\n\n    for (var i = 0; i < as.length; i++) {\n      out.push.apply(out, f(i, as[i]));\n    }\n\n    return out;\n  };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var scanLeft = function scanLeft(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n\n    for (var i = 0; i < len; i++) {\n      out[i + 1] = f(out[i], as[i]);\n    }\n\n    return out;\n  };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var scanRight = function scanRight(b, f) {\n  return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n\n    for (var i = len - 1; i >= 0; i--) {\n      out[i] = f(as[i], out[i + 1]);\n    }\n\n    return out;\n  };\n};\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\n\nexport var size = function size(as) {\n  return as.length;\n};\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\n\nexport var isOutOfBound = NEA.isOutOfBound; // TODO: remove non-curried overloading in v3\n\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\n\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var tail = function tail(as) {\n  return isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var init = function init(as) {\n  return isNonEmpty(as) ? _.some(NEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var takeLeft = function takeLeft(n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? copy(as) : as.slice(0, n);\n  };\n};\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var takeRight = function takeRight(n) {\n  return function (as) {\n    return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n  };\n};\nexport function takeLeftWhile(predicate) {\n  return function (as) {\n    var out = [];\n\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n\n      if (!predicate(a)) {\n        break;\n      }\n\n      out.push(a);\n    }\n\n    return out;\n  };\n}\n\nvar spanLeftIndex = function spanLeftIndex(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nexport function spanLeft(predicate) {\n  return function (as) {\n    var _a = splitAt(spanLeftIndex(as, predicate))(as),\n        init = _a[0],\n        rest = _a[1];\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var dropLeft = function dropLeft(n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n  };\n};\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var dropRight = function dropRight(n) {\n  return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n  };\n};\nexport function dropLeftWhile(predicate) {\n  return function (as) {\n    return as.slice(spanLeftIndex(as, predicate));\n  };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\n\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n  return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n  return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\n\nexport var findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var copy = function copy(as) {\n  return as.slice();\n};\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\n\nexport var insertAt = function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n  };\n};\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\n\nexport var updateAt = function updateAt(i, a) {\n  return modifyAt(i, function () {\n    return a;\n  });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\n\nexport var deleteAt = function deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n  };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\n\nexport var modifyAt = function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var reverse = function reverse(as) {\n  return isEmpty(as) ? [] : as.slice().reverse();\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var rights = function rights(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var lefts = function lefts(as) {\n  var r = [];\n\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n  };\n};\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var zipWith = function zipWith(fa, fb, f) {\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n};\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\n\nexport var unzip = function unzip(as) {\n  var fa = [];\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n};\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var prependAll = function prependAll(middle) {\n  var f = NEA.prependAll(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : [];\n  };\n};\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexport var intersperse = function intersperse(middle) {\n  var f = NEA.intersperse(middle);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : copy(as);\n  };\n};\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var rotate = function rotate(n) {\n  var f = NEA.rotate(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : copy(as);\n  };\n}; // TODO: remove non-curried overloading in v3\n\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\n\nexport var elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var uniq = function uniq(E) {\n  var f = NEA.uniq(E);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : copy(as);\n  };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var sortBy = function sortBy(ords) {\n  var f = NEA.sortBy(ords);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : copy(as);\n  };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var chop = function chop(f) {\n  var g = NEA.chop(f);\n  return function (as) {\n    return isNonEmpty(as) ? g(as) : [];\n  };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var splitAt = function splitAt(n) {\n  return function (as) {\n    return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n  };\n};\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var chunksOf = function chunksOf(n) {\n  var f = NEA.chunksOf(n);\n  return function (as) {\n    return isNonEmpty(as) ? f(as) : [];\n  };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var fromOptionK = function fromOptionK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return fromOption(f.apply(void 0, a));\n  };\n};\nexport function comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    return isNonEmpty(input) ? pipe(NEA.head(input), chain(function (x) {\n      return go(pipe(scope, append(x)), NEA.tail(input));\n    })) : g.apply(void 0, scope) ? [f.apply(void 0, scope)] : [];\n  };\n\n  return go([], input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var concatW = function concatW(second) {\n  return function (first) {\n    return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n  };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var concat = concatW;\nexport function union(E) {\n  var unionE = NEA.union(E);\n  return function (first, second) {\n    if (second === undefined) {\n      var unionE_1 = union(E);\n      return function (second) {\n        return unionE_1(second, first);\n      };\n    }\n\n    return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? copy(first) : copy(second);\n  };\n}\nexport function intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexport function difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n} // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, map(f));\n};\n/* istanbul ignore next */\n\n\nvar _mapWithIndex = function _mapWithIndex(fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\n\nvar _ap = function _ap(fab, fa) {\n  return pipe(fab, ap(fa));\n};\n\nvar _chain = function _chain(ma, f) {\n  return pipe(ma, chain(f));\n};\n/* istanbul ignore next */\n\n\nvar _filter = function _filter(fa, predicate) {\n  return pipe(fa, filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _filterMap = function _filterMap(fa, f) {\n  return pipe(fa, filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partition = function _partition(fa, predicate) {\n  return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMap = function _partitionMap(fa, f) {\n  return pipe(fa, partitionMap(f));\n};\n/* istanbul ignore next */\n\n\nvar _partitionWithIndex = function _partitionWithIndex(fa, predicateWithIndex) {\n  return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _partitionMapWithIndex = function _partitionMapWithIndex(fa, f) {\n  return pipe(fa, partitionMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _alt = function _alt(fa, that) {\n  return pipe(fa, alt(that));\n};\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _reduceWithIndex = function _reduceWithIndex(fa, b, f) {\n  return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMapWithIndex = function _foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapWithIndexM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRightWithIndex = function _reduceRightWithIndex(fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _filterMapWithIndex = function _filterMapWithIndex(fa, f) {\n  return pipe(fa, filterMapWithIndex(f));\n};\n/* istanbul ignore next */\n\n\nvar _filterWithIndex = function _filterWithIndex(fa, predicateWithIndex) {\n  return pipe(fa, filterWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(fa, f) {\n  return pipe(fa, extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _traverseWithIndex = function _traverseWithIndex(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\n\nexport var of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\n\nexport var zero = function zero() {\n  return [];\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\n\nexport var map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\n\nexport var ap = function ap(fa) {\n  return chain(function (f) {\n    return pipe(fa, map(f));\n  });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\n\nexport var chain = function chain(f) {\n  return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var flatten = /*#__PURE__*/chain(identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nexport var mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexport var filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    var out = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (_.isSome(optionB)) {\n        out.push(optionB.value);\n      }\n    }\n\n    return out;\n  };\n};\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nexport var filterMap = function filterMap(f) {\n  return filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\n\nexport var compact = /*#__PURE__*/filterMap(identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\n\nexport var separate = function separate(fa) {\n  var left = [];\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return separated(left, right);\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nexport var filter = function filter(predicate) {\n  return function (as) {\n    return as.filter(predicate);\n  };\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nexport var partition = function partition(predicate) {\n  return partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexport var partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (as) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < as.length; i++) {\n      var b = as[i];\n\n      if (predicateWithIndex(i, b)) {\n        right.push(b);\n      } else {\n        left.push(b);\n      }\n    }\n\n    return separated(left, right);\n  };\n};\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\n\nexport var partitionMap = function partitionMap(f) {\n  return partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexport var partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    var left = [];\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return separated(left, right);\n  };\n};\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\n\nexport var altW = function altW(that) {\n  return function (fa) {\n    return fa.concat(that());\n  };\n};\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexport var alt = altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexport var filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (as) {\n    return as.filter(function (b, i) {\n      return predicateWithIndex(i, b);\n    });\n  };\n};\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\n\nexport var extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i) {\n      return f(wa.slice(i));\n    });\n  };\n};\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return pipe(as, append(a));\n        };\n      }), fa);\n    });\n  };\n};\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nexport var traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return pipe(bs, append(b));\n        };\n      }), f(i, a));\n    });\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wither = function wither(F) {\n  var _witherF = _wither(F);\n\n  return function (f) {\n    return function (fa) {\n      return _witherF(fa, f);\n    };\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexport var wilt = function wilt(F) {\n  var _wiltF = _wilt(F);\n\n  return function (f) {\n    return function (fa) {\n      return _wiltF(fa, f);\n    };\n  };\n};\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\n\nexport var unfold = function unfold(b, f) {\n  var out = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (_.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      out.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return out;\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\n\nexport var getSemigroup = function getSemigroup() {\n  return {\n    concat: function concat(first, second) {\n      return first.concat(second);\n    }\n  };\n};\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getMonoid = function getMonoid() {\n  return {\n    concat: getSemigroup().concat,\n    empty: []\n  };\n};\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexport var getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nexport var getUnionSemigroup = function getUnionSemigroup(E) {\n  var unionE = union(E);\n  return {\n    concat: function concat(first, second) {\n      return unionE(second)(first);\n    }\n  };\n};\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nexport var getUnionMonoid = function getUnionMonoid(E) {\n  return {\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n  };\n};\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nexport var getIntersectionSemigroup = function getIntersectionSemigroup(E) {\n  var intersectionE = intersection(E);\n  return {\n    concat: function concat(first, second) {\n      return intersectionE(second)(first);\n    }\n  };\n};\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\n\nexport var getDifferenceMagma = function getDifferenceMagma(E) {\n  var differenceE = difference(E);\n  return {\n    concat: function concat(first, second) {\n      return differenceE(second)(first);\n    }\n  };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Pointed = {\n  URI: URI,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Apply = {\n  URI: URI,\n  map: _map,\n  ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apFirst = /*#__PURE__*/apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var apSecond = /*#__PURE__*/apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Applicative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\n\nexport var Chain = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var chainFirst = /*#__PURE__*/chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Monad = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Unfoldable = {\n  URI: URI,\n  unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alt = {\n  URI: URI,\n  map: _map,\n  alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var Zero = {\n  URI: URI,\n  zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\n\nexport var guard = /*#__PURE__*/guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Alternative = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  of: of,\n  alt: _alt,\n  zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Extend = {\n  URI: URI,\n  map: _map,\n  extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Filterable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FilterableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: _map,\n  mapWithIndex: _mapWithIndex,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverse: _traverse,\n  sequence: sequence,\n  traverseWithIndex: _traverseWithIndex\n};\n\nvar _wither = /*#__PURE__*/witherDefault(Traversable, Compactable);\n\nvar _wilt = /*#__PURE__*/wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\n\n\nexport var Witherable = {\n  URI: URI,\n  map: _map,\n  compact: compact,\n  separate: separate,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  wither: _wither,\n  wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var ChainRecDepthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\n\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var ChainRecBreadthFirst = {\n  URI: URI,\n  map: _map,\n  ap: _ap,\n  chain: _chain,\n  chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\n\nexport var filterE = /*#__PURE__*/filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\n\nexport var FromEither = {\n  URI: URI,\n  fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\n\nexport var fromEitherK = /*#__PURE__*/fromEitherK_(FromEither); // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexport var unsafeUpdateAt = function unsafeUpdateAt(i, a, as) {\n  return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexport var unsafeDeleteAt = function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\n\nexport var every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\n\nexport var some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\n\nexport var exists = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexport var Do = /*#__PURE__*/of(_.emptyRecord);\n/**\n * @since 2.8.0\n */\n\nexport var bindTo = /*#__PURE__*/bindTo_(Functor);\n/**\n * @since 2.8.0\n */\n\nexport var bind = /*#__PURE__*/bind_(Chain); // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexport var apS = /*#__PURE__*/apS_(Apply); // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\n\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var array = {\n  URI: URI,\n  compact: compact,\n  separate: separate,\n  map: _map,\n  ap: _ap,\n  of: of,\n  chain: _chain,\n  filter: _filter,\n  filterMap: _filterMap,\n  partition: _partition,\n  partitionMap: _partitionMap,\n  mapWithIndex: _mapWithIndex,\n  partitionMapWithIndex: _partitionMapWithIndex,\n  partitionWithIndex: _partitionWithIndex,\n  filterMapWithIndex: _filterMapWithIndex,\n  filterWithIndex: _filterWithIndex,\n  alt: _alt,\n  zero: zero,\n  unfold: unfold,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence,\n  reduceWithIndex: _reduceWithIndex,\n  foldMapWithIndex: _foldMapWithIndex,\n  reduceRightWithIndex: _reduceRightWithIndex,\n  traverseWithIndex: _traverseWithIndex,\n  extend: _extend,\n  wither: _wither,\n  wilt: _wilt\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nvar dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var absolute = ownerState.absolute,\n      children = ownerState.children,\n      classes = ownerState.classes,\n      flexItem = ownerState.flexItem,\n      light = ownerState.light,\n      orientation = ownerState.orientation,\n      textAlign = ownerState.textAlign,\n      variant = ownerState.variant;\n  var slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\n\nvar DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  return _extends({\n    margin: 0,\n    // Reset browser default style.\n    flexShrink: 0,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.palette.divider,\n    borderBottomWidth: 'thin'\n  }, ownerState.absolute && {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  }, ownerState.light && {\n    borderColor: alpha(theme.palette.divider, 0.08)\n  }, ownerState.variant === 'inset' && {\n    marginLeft: 72\n  }, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  }, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }, ownerState.orientation === 'vertical' && {\n    height: '100%',\n    borderBottomWidth: 0,\n    borderRightWidth: 'thin'\n  }, ownerState.flexItem && {\n    alignSelf: 'stretch',\n    height: 'auto'\n  });\n}, function (_ref2) {\n  var theme = _ref2.theme,\n      ownerState = _ref2.ownerState;\n  return _extends({}, ownerState.children && {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    border: 0,\n    '&::before, &::after': {\n      position: 'relative',\n      width: '100%',\n      borderTop: \"thin solid \".concat(theme.palette.divider),\n      top: '50%',\n      content: '\"\"',\n      transform: 'translateY(50%)'\n    }\n  });\n}, function (_ref3) {\n  var theme = _ref3.theme,\n      ownerState = _ref3.ownerState;\n  return _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n    flexDirection: 'column',\n    '&::before, &::after': {\n      height: '100%',\n      top: '0%',\n      left: '50%',\n      borderTop: 0,\n      borderLeft: \"thin solid \".concat(theme.palette.divider),\n      transform: 'translateX(0%)'\n    }\n  });\n}, function (_ref4) {\n  var ownerState = _ref4.ownerState;\n  return _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n    '&::before': {\n      width: '90%'\n    },\n    '&::after': {\n      width: '10%'\n    }\n  }, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n    '&::before': {\n      width: '10%'\n    },\n    '&::after': {\n      width: '90%'\n    }\n  });\n});\nvar DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(function (_ref5) {\n  var theme = _ref5.theme,\n      ownerState = _ref5.ownerState;\n  return _extends({\n    display: 'inline-block',\n    paddingLeft: \"calc(\".concat(theme.spacing(1), \" * 1.2)\"),\n    paddingRight: \"calc(\".concat(theme.spacing(1), \" * 1.2)\")\n  }, ownerState.orientation === 'vertical' && {\n    paddingTop: \"calc(\".concat(theme.spacing(1), \" * 1.2)\"),\n    paddingBottom: \"calc(\".concat(theme.spacing(1), \" * 1.2)\")\n  });\n});\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? children ? 'div' : 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$textAlign = props.textAlign,\n      textAlign = _props$textAlign === void 0 ? 'center' : _props$textAlign,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    absolute: absolute,\n    component: component,\n    flexItem: flexItem,\n    light: light,\n    orientation: orientation,\n    role: role,\n    textAlign: textAlign,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Divider;","import { identity, pipe } from './function';\nimport { flap as flap_ } from './Functor'; // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/**\n * @category destructors\n * @since 2.5.0\n */\n\nexport function fst(ea) {\n  return ea[0];\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n\nexport function snd(ea) {\n  return ea[1];\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\n\nexport var swap = function swap(ea) {\n  return [snd(ea), fst(ea)];\n};\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport function getApply(S) {\n  return {\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function ap(fab, fa) {\n      return [fst(fab)(fst(fa)), S.concat(snd(fab), snd(fa))];\n    }\n  };\n}\n\nvar of = function of(M) {\n  return function (a) {\n    return [a, M.empty];\n  };\n};\n/**\n * @category instances\n * @since 2.5.0\n */\n\n\nexport function getApplicative(M) {\n  var A = getApply(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: A.map,\n    ap: A.ap,\n    of: of(M)\n  };\n}\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport function getChain(S) {\n  var A = getApply(S);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: A.map,\n    ap: A.ap,\n    chain: function chain(ma, f) {\n      var _a = f(fst(ma)),\n          b = _a[0],\n          s = _a[1];\n\n      return [b, S.concat(snd(ma), s)];\n    }\n  };\n}\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport function getMonad(M) {\n  var C = getChain(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: C.map,\n    ap: C.ap,\n    chain: C.chain,\n    of: of(M)\n  };\n}\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport function getChainRec(M) {\n  var chainRec = function chainRec(a, f) {\n    var result = f(a);\n    var acc = M.empty;\n    var s = fst(result);\n\n    while (s._tag === 'Left') {\n      acc = M.concat(acc, snd(result));\n      result = f(s.left);\n      s = fst(result);\n    }\n\n    return [s.right, M.concat(acc, snd(result))];\n  };\n\n  var C = getChain(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: C.map,\n    ap: C.ap,\n    chain: C.chain,\n    chainRec: chainRec\n  };\n} // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar _compose = function _compose(bc, ab) {\n  return pipe(bc, compose(ab));\n};\n/* istanbul ignore next */\n\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, mapFst(f));\n};\n/* istanbul ignore next */\n\n\nvar _bimap = function _bimap(fa, f, g) {\n  return pipe(fa, bimap(f, g));\n};\n/* istanbul ignore next */\n\n\nvar _mapLeft = function _mapLeft(fa, f) {\n  return pipe(fa, mapSnd(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _traverse = function _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.5.0\n */\n\n\nexport var bimap = function bimap(f, g) {\n  return function (fa) {\n    return [g(fst(fa)), f(snd(fa))];\n  };\n};\n/**\n * Map a function over the first component of a `ReadonlyTuple`.\n *\n * This is the `map` operation of the `Functor` instance.\n *\n * @category Functor\n * @since 2.10.0\n */\n\nexport var mapFst = function mapFst(f) {\n  return function (fa) {\n    return [f(fst(fa)), snd(fa)];\n  };\n};\n/**\n * Map a function over the second component of a `ReadonlyTuple`.\n *\n * This is the `mapLeft` operation of the `Bifunctor` instance.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nexport var mapSnd = function mapSnd(f) {\n  return function (fa) {\n    return [fst(fa), f(snd(fa))];\n  };\n};\n/**\n * @category Semigroupoid\n * @since 2.5.0\n */\n\nexport var compose = function compose(ab) {\n  return function (bc) {\n    return [fst(bc), snd(ab)];\n  };\n};\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nexport var extend = function extend(f) {\n  return function (wa) {\n    return [f(wa), snd(wa)];\n  };\n};\n/**\n * @category Extract\n * @since 2.6.2\n */\n\nexport var extract = fst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduce = function reduce(b, f) {\n  return function (fa) {\n    return f(b, fst(fa));\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var foldMap = function foldMap() {\n  return function (f) {\n    return function (fa) {\n      return f(fst(fa));\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nexport var reduceRight = function reduceRight(b, f) {\n  return function (fa) {\n    return f(fst(fa), b);\n  };\n};\n/**\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  return function (f) {\n    return function (ta) {\n      return F.map(f(fst(ta)), function (b) {\n        return [b, snd(ta)];\n      });\n    };\n  };\n};\n/**\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return function (fas) {\n    return F.map(fst(fas), function (a) {\n      return [a, snd(fas)];\n    });\n  };\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexport var URI = 'ReadonlyTuple';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Bifunctor = {\n  URI: URI,\n  bimap: _bimap,\n  mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Semigroupoid = {\n  URI: URI,\n  compose: _compose\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n}; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`mapFst`](#mapfst) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexport var map = mapFst;\n/**\n * Use [`mapSnd`](#mapsnd) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\n\nexport var mapLeft = mapSnd;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\n\nexport var readonlyTuple = {\n  URI: URI,\n  compose: _compose,\n  map: _map,\n  bimap: _bimap,\n  mapLeft: _mapLeft,\n  extract: extract,\n  extend: _extend,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};","import * as RT from './ReadonlyTuple';\nimport { flap as flap_ } from './Functor';\nimport { identity, pipe } from './function'; // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/**\n * @category destructors\n * @since 2.0.0\n */\n\nexport var fst = RT.fst;\n/**\n * @category destructors\n * @since 2.0.0\n */\n\nexport var snd = RT.snd;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexport var swap = function swap(ea) {\n  return [snd(ea), fst(ea)];\n};\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport function getApply(S) {\n  return {\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function ap(fab, fa) {\n      return [fst(fab)(fst(fa)), S.concat(snd(fab), snd(fa))];\n    }\n  };\n}\n\nvar of = function of(M) {\n  return function (a) {\n    return [a, M.empty];\n  };\n};\n/**\n * @category instances\n * @since 2.0.0\n */\n\n\nexport function getApplicative(M) {\n  var A = getApply(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: A.map,\n    ap: A.ap,\n    of: of(M)\n  };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport function getChain(S) {\n  var A = getApply(S);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: A.map,\n    ap: A.ap,\n    chain: function chain(ma, f) {\n      var _a = f(fst(ma)),\n          b = _a[0],\n          s = _a[1];\n\n      return [b, S.concat(snd(ma), s)];\n    }\n  };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport function getMonad(M) {\n  var C = getChain(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: C.map,\n    ap: C.ap,\n    chain: C.chain,\n    of: of(M)\n  };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport function getChainRec(M) {\n  var chainRec = function chainRec(a, f) {\n    var result = f(a);\n    var acc = M.empty;\n    var s = fst(result);\n\n    while (s._tag === 'Left') {\n      acc = M.concat(acc, snd(result));\n      result = f(s.left);\n      s = fst(result);\n    }\n\n    return [s.right, M.concat(acc, snd(result))];\n  };\n\n  var C = getChain(M);\n  return {\n    URI: URI,\n    _E: undefined,\n    map: C.map,\n    ap: C.ap,\n    chain: C.chain,\n    chainRec: chainRec\n  };\n} // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar _compose = function _compose(bc, ab) {\n  return pipe(bc, compose(ab));\n};\n/* istanbul ignore next */\n\n\nvar _map = function _map(fa, f) {\n  return pipe(fa, mapFst(f));\n};\n/* istanbul ignore next */\n\n\nvar _bimap = function _bimap(fa, f, g) {\n  return pipe(fa, bimap(f, g));\n};\n/* istanbul ignore next */\n\n\nvar _mapLeft = function _mapLeft(fa, f) {\n  return pipe(fa, mapSnd(f));\n};\n/* istanbul ignore next */\n\n\nvar _extend = function _extend(wa, f) {\n  return pipe(wa, extend(f));\n};\n/* istanbul ignore next */\n\n\nvar _reduce = function _reduce(fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\n/* istanbul ignore next */\n\n\nvar _foldMap = function _foldMap(M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar _reduceRight = function _reduceRight(fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\n/* istanbul ignore next */\n\n\nfunction _traverse(F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n} // -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\n\n\nexport var bimap = function bimap(f, g) {\n  return function (fa) {\n    return [g(fst(fa)), f(snd(fa))];\n  };\n};\n/**\n * Map a function over the first component of a `Tuple`.\n *\n * This is the `map` operation of the `Functor` instance.\n *\n * @category Functor\n * @since 2.0.0\n */\n\nexport var mapFst = function mapFst(f) {\n  return function (fa) {\n    return [f(fst(fa)), snd(fa)];\n  };\n};\n/**\n * Map a function over the second component of a `Tuple`.\n *\n * This is the `mapLeft` operation of the `Bifunctor` instance.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\n\nexport var mapSnd = function mapSnd(f) {\n  return function (fa) {\n    return [fst(fa), f(snd(fa))];\n  };\n};\n/**\n * @category Semigroupoid\n * @since 2.0.0\n */\n\nexport var compose = function compose(ab) {\n  return function (bc) {\n    return [fst(bc), snd(ab)];\n  };\n};\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nexport var extend = function extend(f) {\n  return function (wa) {\n    return [f(wa), snd(wa)];\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexport var duplicate = /*#__PURE__*/extend(identity);\n/**\n * @category Extract\n * @since 2.6.2\n */\n\nexport var extract = RT.extract;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var foldMap = RT.foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduce = RT.reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexport var reduceRight = RT.reduceRight;\n/**\n * @since 2.6.3\n */\n\nexport var traverse = function traverse(F) {\n  return function (f) {\n    return function (ta) {\n      return F.map(f(fst(ta)), function (b) {\n        return [b, snd(ta)];\n      });\n    };\n  };\n};\n/**\n * @since 2.6.3\n */\n\nexport var sequence = function sequence(F) {\n  return function (fas) {\n    return F.map(fst(fas), function (a) {\n      return [a, snd(fas)];\n    });\n  };\n}; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexport var URI = 'Tuple';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Functor = {\n  URI: URI,\n  map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\n\nexport var flap = /*#__PURE__*/flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Bifunctor = {\n  URI: URI,\n  bimap: _bimap,\n  mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Semigroupoid = {\n  URI: URI,\n  compose: _compose\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Comonad = {\n  URI: URI,\n  map: _map,\n  extend: _extend,\n  extract: extract\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Foldable = {\n  URI: URI,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexport var Traversable = {\n  URI: URI,\n  map: _map,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n}; // -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n\n/**\n * Use [`mapFst`](#mapfst) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexport var map = mapFst;\n/**\n * Use [`mapSnd`](#mapsnd) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n\nexport var mapLeft = mapSnd;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexport var tuple = {\n  URI: URI,\n  compose: _compose,\n  map: _map,\n  bimap: _bimap,\n  mapLeft: _mapLeft,\n  extract: extract,\n  extend: _extend,\n  reduce: _reduce,\n  foldMap: _foldMap,\n  reduceRight: _reduceRight,\n  traverse: _traverse,\n  sequence: sequence\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nvar cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _defineProperty from \"/home/runner/work/answers/answers/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nvar CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    display: 'block',\n    textAlign: 'inherit',\n    width: '100%'\n  }, _defineProperty(_ref2, \"&:hover .\".concat(cardActionAreaClasses.focusHighlight), {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  }), _defineProperty(_ref2, \"&.\".concat(cardActionAreaClasses.focusVisible, \" .\").concat(cardActionAreaClasses.focusHighlight), {\n    opacity: theme.palette.action.focusOpacity\n  }), _ref2;\n});\nvar CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.focusHighlight;\n  }\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit',\n    opacity: 0,\n    backgroundColor: 'currentcolor',\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.short\n    })\n  };\n});\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  var children = props.children,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = props;\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default CardActionArea;","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { TreeTemT } from \"../decoders\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { array, either } from \"fp-ts\";\nimport MathMD from \"./mathmd\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport { useAppDispatch } from \"../state/hooks\";\nimport { sha1Slice } from \"../state/slice\";\nimport Stack from \"@mui/material/Stack\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { pipe } from \"fp-ts/function\";\nimport { fetchSha1, openSha1, pair } from \"../util\";\nimport { fst, snd } from \"fp-ts/Tuple\";\nimport CardActionArea from \"@mui/material/CardActionArea\";\n\ntype State =\n  | {\n      type: \"loading\";\n    }\n  | {\n      type: \"treeTem\";\n      treeTem: TreeTemT;\n    }\n  | {\n      type: \"error\";\n      msg: string;\n    };\n\nexport default function Recursive(props: { sha1: string | TreeTemT }) {\n  const [state, setState] = useState<State>({ type: \"loading\" });\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (typeof props.sha1 === \"string\")\n      fetchSha1(props.sha1)\n        .then((x) => setState({ type: \"treeTem\", treeTem: x }))\n        .catch((e) =>\n          setState({\n            type: \"error\",\n            msg: \"Decoding failed: \\n\" + JSON.stringify(e, undefined, 2),\n          })\n        );\n    else setState({ type: \"treeTem\", treeTem: props.sha1 });\n  }, []);\n  switch (state.type) {\n    case \"loading\":\n      return <div>loading</div>;\n    case \"error\":\n      return <div>{state.msg}</div>;\n    case \"treeTem\":\n      const { treeTem } = state;\n      const { left: nonBooks, right: books } = pipe(\n        treeTem.kids,\n        array.map((kid) =>\n          kid.attr.author === undefined\n            ? either.left(kid)\n            : either.right(pair(kid.attr.author, kid))\n        ),\n        array.separate\n      );\n      return (\n        <div>\n          {treeTem.item.attr.q && (\n            <MathMD\n              htmlString={treeTem.item.attr.q.content}\n              posixTime={treeTem.item.attr.q.posixTime}\n            />\n          )}\n          <Divider variant=\"middle\" />\n          {treeTem.item.attr.a && (\n            <MathMD\n              htmlString={treeTem.item.attr.a.content}\n              posixTime={treeTem.item.attr.a.posixTime}\n            />\n          )}\n\n          <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\n            {books.map((item) => (\n              <Card sx={{ width: 275 }}>\n                <CardActionArea\n                  onClick={() => {\n                    openSha1(snd(item).sha1);\n                  }}\n                >\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {snd(item).title}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {fst(item).content}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {snd(item).numAnswer} problems solved\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            ))}\n          </Stack>\n          {nonBooks\n            .sort((x, y) => x.title.localeCompare(y.title))\n            .map((item) => (\n              <Accordion\n                TransitionProps={{ unmountOnExit: true }}\n                key={item.sha1}\n              >\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography sx={{ flex: 2 }}>{item.title}</Typography>\n                  <IconButton\n                    color=\"primary\"\n                    component=\"span\"\n                    onClick={(e) => {\n                      dispatch(sha1Slice.actions.setSha1(item.sha1));\n                      e.stopPropagation();\n                    }}\n                  >\n                    <ShareIcon />\n                  </IconButton>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Recursive sha1={item.sha1} />\n                </AccordionDetails>\n              </Accordion>\n            ))}\n        </div>\n      );\n  }\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","joinChildren","children","separator","childrenArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","StackRoot","name","slot","overridesResolver","props","styles","root","_ref","ownerState","theme","display","values","direction","breakpoints","propValue","flexDirection","spacing","transformer","base","Object","keys","acc","breakpoint","directionValues","spacingValues","margin","row","column","Stack","inProps","ref","themeProps","_props$component","component","_props$direction","_props$spacing","divider","other","as","b","c","e","f","g","h","k","l","m","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","type","MathMD","rr","useRef","useEffect","current","mathElements","getElementsByClassName","macros","i","texText","firstChild","tagName","katex","render","data","displayMode","classList","contains","throwOnError","fleqn","style","position","dangerouslySetInnerHTML","__html","htmlString","variant","bottom","right","Date","posixTime","toDateString","getCollapseUtilityClass","generateUtilityClass","generateUtilityClasses","CollapseRoot","styled","orientation","state","entered","in","collapsedSize","hidden","height","overflow","transition","transitions","create","width","visibility","CollapseWrapper","wrapper","_ref2","CollapseWrapperInner","wrapperInner","_ref3","Collapse","useThemeProps","addEndListener","_children","className","_props$collapsedSize","collapsedSizeProp","easing","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$orientation","_props$timeout","timeout","_props$TransitionComp","TransitionComponent","Transition","classes","slots","composeClasses","useUtilityClasses","useTheme","timer","wrapperRef","autoTransitionDuration","isHorizontal","size","clearTimeout","nodeRef","handleRef","useForkRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","undefined","getWrapperSize","handleEnter","isAppearing","handleEntering","wrapperSize","_getTransitionProps","mode","transitionDuration","duration","transitionTimingFunction","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","_getTransitionProps2","next","setTimeout","childProps","muiSupportAuto","getAccordionUtilityClass","AccordionRoot","Paper","region","square","rounded","disableGutters","gutters","shortest","overflowAnchor","left","top","content","opacity","backgroundColor","palette","marginTop","marginBottom","action","disabledBackground","_ref4","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","arr","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","_props$disableGutters","expandedProp","expanded","onChange","_props$square","TransitionProps","_useControlled","useControlled","controlled","_useControlled2","setExpandedState","handleChange","event","_React$Children$toArr","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","toggle","value","id","role","getAccordionSummaryUtilityClass","AccordionSummaryRoot","ButtonBase","_extends2","minHeight","padding","focus","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","AccordionSummaryExpandIconWrapper","expandIconWrapper","_ref5","color","active","transform","expandIcon","focusVisibleClassName","onClick","_React$useContext","_React$useContext$dis","focusVisible","focusRipple","disableRipple","getAccordionDetailsUtilityClass","AccordionDetailsRoot","of","separated","filterMapWithIndex","fa","out","optionB","filterMap","_","map","_i","fa_1","_tag","getDividerUtilityClass","DividerRoot","absolute","light","vertical","flexItem","withChildren","withChildrenVertical","textAlign","textAlignRight","textAlignLeft","flexShrink","borderWidth","borderStyle","borderColor","borderBottomWidth","marginLeft","marginRight","borderRightWidth","alignSelf","whiteSpace","border","borderTop","borderLeft","DividerWrapper","wrapperVertical","paddingLeft","paddingRight","paddingTop","paddingBottom","_props$absolute","_props$flexItem","_props$light","_props$role","_props$textAlign","_props$variant","fst","ea","snd","getCardActionAreaUtilityClass","CardActionAreaRoot","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","pointerEvents","short","Recursive","useState","setState","dispatch","useAppDispatch","sha1","fetchSha1","then","treeTem","catch","msg","JSON","stringify","pipe","kids","array","kid","attr","author","either","pair","nonBooks","books","item","alignItems","Card","sx","openSha1","CardContent","Typography","title","numAnswer","sort","localeCompare","unmountOnExit","ExpandMore","flex","IconButton","sha1Slice","stopPropagation","Share","useDispatch","useAppSelector","useSelector"],"sourceRoot":""}
{
    "item": {
        "attr": {
            "a": "<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode haskell\"><code class=\"sourceCode haskell\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">-- Equational reasoning between Maybe&#39; and Maybe is trivial. It writes itself.</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">type</span> <span class=\"dt\">Maybe&#39;</span> a <span class=\"ot\">=</span> <span class=\"dt\">Either</span> (<span class=\"dt\">Const</span> () a) (<span class=\"dt\">Identity</span> a)</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">maybeFrom ::</span> <span class=\"dt\">Maybe&#39;</span> a <span class=\"ot\">-&gt;</span> <span class=\"dt\">Maybe</span> a</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>maybeFrom (<span class=\"dt\">Left</span> _) <span class=\"ot\">=</span> <span class=\"dt\">Nothing</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>maybeFrom (<span class=\"dt\">Right</span> (<span class=\"dt\">Identity</span> a)) <span class=\"ot\">=</span> <span class=\"dt\">Just</span> a</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">maybeTo ::</span> <span class=\"dt\">Maybe</span> a <span class=\"ot\">-&gt;</span> <span class=\"dt\">Maybe&#39;</span> a</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>maybeTo <span class=\"dt\">Nothing</span> <span class=\"ot\">=</span> <span class=\"dt\">Left</span> (<span class=\"dt\">Const</span> ())</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>maybeTo (<span class=\"dt\">Just</span> a) <span class=\"ot\">=</span> <span class=\"dt\">Right</span> (<span class=\"dt\">Identity</span> a)</span></code></pre></div>",
            "q": "<p>Show the isomorphism between the standard definition of Maybe and\nthis desugaring:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode haskell\"><code class=\"sourceCode haskell\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">type</span> <span class=\"dt\">Maybe&#39;</span> a <span class=\"ot\">=</span> <span class=\"dt\">Either</span> (<span class=\"dt\">Const</span> () a) (<span class=\"dt\">Identity</span> a)</span></code></pre></div>\n<p>Hint: Define two mappings between the two implementations. For\nadditional credit, show that they are the inverse of each other using\nequational reasoning.</p>"
        },
        "numAnswer": 1,
        "sha1": "c91840798b4dbb9abe84455bb6626710f43648ea",
        "title": "2"
    },
    "kids": [],
    "parentSha1": "e18a03b36be491917b35e3ce842e24b63f14db64",
    "path": "answers-db/books/Category Theory For Programmers/8. Functoriality/2"
}
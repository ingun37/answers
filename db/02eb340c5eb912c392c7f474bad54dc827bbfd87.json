{"parentSha1":"26c5819869ec7db87d6e662e66f84e6989f7243e","path":"answers-db/books/Introduction to Probability, Statistics, and Random Processes/2.2.0","item":{"title":"2.2.0","attr":{},"sha1":"02eb340c5eb912c392c7f474bad54dc827bbfd87"},"kids":[{"title":"13","attr":{"q":"<p>There are two coins in a bag. For Coin 1, <span class=\"math inline\">P(H)=\\frac{1}{2}</span> and for Coin 2, <span class=\"math inline\">P(H)=\\frac{1}{3}</span>. Your friend chooses one of the coins at random and tosses it 5 times.</p>"},"sha1":"d38e3bf562843d7ad5e87a990223b88ddae50e7c"},{"title":"6","attr":{"q":"<p>The 52 cards in a shuffled deck are dealt equally among four players, call them A, B, C, and D. If A and B have exactly 7 spades, what is the probability that C has exactly 4 spades?</p>","a":"<p>Since A and B took half of the deck and 7 spades among them, C ane D got the other half with 6 spades among them. It's multiplication of events that C picking 4 out of 7 spades ane 9 from the rests (everything excepts spades).</p>\n<p><span class=\"math display\">\\cfrac{{6 \\choose 4}{20 \\choose 9}}{26 \\choose 13} \\approx 0.2422360248447205</span></p>\n<p>I've also double checked by making a validating program with 999999 randomly generated samples.</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode haskell\"><code class=\"sourceCode haskell\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">module</span> <span class=\"dt\">Lib</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ( combination, problem6</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ) <span class=\"kw\">where</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">System.Random</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">System.Random.Shuffle</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Ix</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Ratio</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Set</span> <span class=\"kw\">hiding</span> (map, take, filter)</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.List.Split</span></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">problem6 ::</span> <span class=\"dt\">IO</span> ()</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>problem6 <span class=\"ot\">=</span> <span class=\"kw\">do</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> sampleSize <span class=\"ot\">=</span> <span class=\"dv\">999999</span></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> decks <span class=\"ot\">=</span> <span class=\"fu\">take</span> sampleSize <span class=\"op\">$</span> <span class=\"fu\">map</span> deal4 [<span class=\"dv\">0</span><span class=\"op\">..</span>]</span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> conditionEvents <span class=\"ot\">=</span> <span class=\"fu\">filter</span> abHave7Spades decks</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> conditionEventSize <span class=\"ot\">=</span> <span class=\"fu\">length</span> conditionEvents</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> events <span class=\"ot\">=</span> <span class=\"fu\">filter</span> cHas4Spades conditionEvents</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> eventSize <span class=\"ot\">=</span> <span class=\"fu\">length</span> events</span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"fu\">print</span> <span class=\"op\">$</span> <span class=\"fu\">fromRational</span> <span class=\"op\">$</span> (<span class=\"fu\">toInteger</span> eventSize) <span class=\"op\">%</span> (<span class=\"fu\">toInteger</span> conditionEventSize)</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">abHave7Spades ::</span> [[<span class=\"dt\">Int</span>]] <span class=\"ot\">-&gt;</span> <span class=\"dt\">Bool</span></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>abHave7Spades (a<span class=\"op\">:</span>b<span class=\"op\">:</span>c<span class=\"op\">:</span>d<span class=\"op\">:</span>_) <span class=\"ot\">=</span> <span class=\"kw\">let</span> ab <span class=\"ot\">=</span> a <span class=\"op\">++</span> b </span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>                            <span class=\"kw\">in</span> <span class=\"dv\">7</span> <span class=\"op\">==</span> <span class=\"fu\">length</span> (<span class=\"fu\">filter</span> (<span class=\"dv\">13</span><span class=\"op\">&gt;</span>) ab)</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">cHas4Spades ::</span> [[<span class=\"dt\">Int</span>]] <span class=\"ot\">-&gt;</span> <span class=\"dt\">Bool</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>cHas4Spades (a<span class=\"op\">:</span>b<span class=\"op\">:</span>c<span class=\"op\">:</span>d<span class=\"op\">:</span>_) <span class=\"ot\">=</span> <span class=\"dv\">4</span> <span class=\"op\">==</span> <span class=\"fu\">length</span> (<span class=\"fu\">filter</span> (<span class=\"dv\">13</span><span class=\"op\">&gt;</span>) c)</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">-- argument is seed</span></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">shuffledDeck ::</span> <span class=\"dt\">Int</span> <span class=\"ot\">-&gt;</span> [<span class=\"dt\">Int</span>]</span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>shuffledDeck <span class=\"ot\">=</span> shuffle&#39; (<span class=\"fu\">range</span> (<span class=\"dv\">0</span>,<span class=\"dv\">51</span>)) <span class=\"dv\">52</span> <span class=\"op\">.</span> mkStdGen</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">-- argument is seed</span></span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">deal4 ::</span> <span class=\"dt\">Int</span> <span class=\"ot\">-&gt;</span> [[<span class=\"dt\">Int</span>]]</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>deal4 <span class=\"ot\">=</span> <span class=\"fu\">take</span> <span class=\"dv\">4</span> <span class=\"op\">.</span> chunksOf <span class=\"dv\">13</span> <span class=\"op\">.</span> shuffledDeck</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">combination ::</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span></span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>combination n r <span class=\"ot\">=</span>  <span class=\"fu\">div</span> numer denom</span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"kw\">where</span> a <span class=\"ot\">=</span> fromList <span class=\"op\">$</span> <span class=\"fu\">range</span> ((n <span class=\"op\">-</span> r <span class=\"op\">+</span> <span class=\"dv\">1</span>), n)</span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>                      b <span class=\"ot\">=</span> fromList <span class=\"op\">$</span> <span class=\"fu\">range</span> (<span class=\"dv\">1</span>, r)</span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>                      numer <span class=\"ot\">=</span> <span class=\"fu\">product</span> <span class=\"op\">$</span> a \\\\ b</span>\n<span id=\"cb1-41\"><a href=\"#cb1-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>                      denom <span class=\"ot\">=</span> <span class=\"fu\">product</span> <span class=\"op\">$</span> b \\\\ a</span></code></pre></div>\n<p>Result was</p>\n<pre class=\"shell\"><code>0.24377365132447418</code></pre>\n<p>which is close enough to support the result.</p>"},"sha1":"3433d7fab806b4f1b13c4b0aa323d7092800db05"},{"title":"3","attr":{"q":"<p>There are 20 black cell phones and 30 white cell phones in a store. An employee takes 10 phones at random. Find the probability that</p>\n<p>a. there will be exactly 4 black cell phones among the chosen phones; b. there will be less than 3 black cell phones among the chosen phones.</p>","a":"<p>For (a), it's multiplication of choosing 4 out of 20 black phones and 6 out of 30 white phones.</p>\n<p><span class=\"math display\">\\cfrac{{20 \\choose 4}{30 \\choose 6}}{{50 \\choose 10}} \\approx 0.2800586031</span></p>\n<p>For (b)</p>\n<p><span class=\"math display\">\\cfrac{{20 \\choose 2}{30 \\choose 8}}{{50 \\choose 10}} + \\cfrac{{20 \\choose 1}{30 \\choose 9}}{{50 \\choose 10}} + \\cfrac{{20 \\choose 0}{30 \\choose 10}}{{50 \\choose 10}} \\approx 0.13903865738</span></p>"},"sha1":"9b70baf5956f862f102ee14a88d5c24f466fd6a1"},{"title":"4","attr":{"q":"<p>Five cards are dealt from a shuffled deck. What is the probability that the dealt hand contains</p>\n<p>a. exactly one ace; b. at least one ace?</p>","a":"<p>For (a), it's multiplication of choosing 1 out of 4 aces and 4 out of the rest.</p>\n<p><span class=\"math display\">\\cfrac{{4 \\choose 1}{48 \\choose 4}}{{52 \\choose 5}} \\approx 0.2994736356</span></p>\n<p>For (b)</p>\n<p><span class=\"math display\">1 - \\cfrac{{48 \\choose 5}}{{52 \\choose 5}} \\approx 0.34115800166</span></p>\n<h2 id=\"footnotes\">Footnotes</h2>\n<p>I was in disbelief with the result so I made a validating program to test.</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode haskell\"><code class=\"sourceCode haskell\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">module</span> <span class=\"dt\">Lib</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ( someFunc, combination, hasOnly1Ace</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ) <span class=\"kw\">where</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">System.Random</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">System.Random.Shuffle</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Ix</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Ratio</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">import</span> <span class=\"dt\">Data.Set</span> <span class=\"kw\">hiding</span> (map, take, filter)</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">someFunc ::</span> <span class=\"dt\">IO</span> ()</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>someFunc <span class=\"ot\">=</span> <span class=\"kw\">do</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> sampleSize <span class=\"ot\">=</span> <span class=\"dv\">999999</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> samples <span class=\"ot\">=</span> <span class=\"fu\">take</span> sampleSize <span class=\"op\">$</span> <span class=\"fu\">map</span> (pickRandoms <span class=\"dv\">5</span>) [<span class=\"dv\">0</span><span class=\"op\">..</span>]</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> eventSize1 <span class=\"ot\">=</span> <span class=\"fu\">length</span> <span class=\"op\">$</span> <span class=\"fu\">filter</span> hasOnly1Ace samples</span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"fu\">print</span> <span class=\"op\">$</span> <span class=\"fu\">fromRational</span> <span class=\"op\">$</span> (<span class=\"fu\">toInteger</span> eventSize1) <span class=\"op\">%</span> (<span class=\"fu\">toInteger</span> sampleSize)</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">let</span> eventSize2 <span class=\"ot\">=</span> <span class=\"fu\">length</span> <span class=\"op\">$</span> <span class=\"fu\">filter</span> hasAtLeast1Ace samples</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"fu\">print</span> <span class=\"op\">$</span> <span class=\"fu\">fromRational</span> <span class=\"op\">$</span> (<span class=\"fu\">toInteger</span> eventSize2) <span class=\"op\">%</span> (<span class=\"fu\">toInteger</span> sampleSize)</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">pickRandoms ::</span> <span class=\"dt\">Int</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Int</span> <span class=\"ot\">-&gt;</span> [<span class=\"dt\">Int</span>]</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>pickRandoms n seed <span class=\"ot\">=</span> <span class=\"fu\">take</span> n <span class=\"op\">$</span> randomRs (<span class=\"dv\">0</span>,<span class=\"dv\">51</span>) (mkStdGen seed)</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">seqMul ::</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>seqMul x <span class=\"ot\">=</span> <span class=\"fu\">product</span> <span class=\"op\">.</span> <span class=\"fu\">range</span> <span class=\"op\">.</span> (,) x</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">factorial ::</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>factorial <span class=\"dv\">0</span> <span class=\"ot\">=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>factorial n <span class=\"ot\">=</span> n <span class=\"op\">*</span> (factorial (n<span class=\"op\">-</span><span class=\"dv\">1</span>))</span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">combination ::</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span> <span class=\"ot\">-&gt;</span> <span class=\"dt\">Integer</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>combination n r <span class=\"ot\">=</span> <span class=\"fu\">div</span> (seqMul (n <span class=\"op\">-</span> r <span class=\"op\">+</span> <span class=\"dv\">1</span>) n) (factorial r)</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">hasOnly1Ace ::</span> [<span class=\"dt\">Int</span>] <span class=\"ot\">-&gt;</span> <span class=\"dt\">Bool</span></span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>hasOnly1Ace arr <span class=\"ot\">=</span> <span class=\"kw\">let</span> a <span class=\"ot\">=</span> fromList arr</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>                      aces <span class=\"ot\">=</span> fromList [<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">2</span>,<span class=\"dv\">3</span>]</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>                  <span class=\"kw\">in</span> <span class=\"dv\">1</span> <span class=\"op\">==</span> (size <span class=\"op\">$</span> intersection a aces)</span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ot\">hasAtLeast1Ace ::</span> [<span class=\"dt\">Int</span>] <span class=\"ot\">-&gt;</span> <span class=\"dt\">Bool</span></span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>hasAtLeast1Ace arr <span class=\"ot\">=</span> <span class=\"kw\">let</span> a <span class=\"ot\">=</span> fromList arr</span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>                         aces <span class=\"ot\">=</span> fromList [<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">2</span>,<span class=\"dv\">3</span>]</span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>                     <span class=\"kw\">in</span> <span class=\"dv\">0</span> <span class=\"op\">&lt;</span> (size <span class=\"op\">$</span> intersection a aces)</span></code></pre></div>\n<p>Result was</p>\n<pre><code>0.3021743021743022\n0.34475734475734476</code></pre>\n<p>which was very close to my calculation.</p>\n<p>I learned not to believe my intuition.</p>"},"sha1":"9b74bb51851a928d3334caa57c4298c19c6f2e1e"},{"title":"2","attr":{"q":"<p>Eight committee members are meeting in a room that has twelve chairs. In how many ways can they sit in the chairs?</p>","a":"<p>Pick 8 from 12 chairs.</p>\n<p><span class=\"math display\">{12 \\choose 8}</span></p>\n<p>Multiply the number of ways for 8 people to sit on 8 chairs.</p>\n<p><span class=\"math display\">{12 \\choose 8}P^8_8\n= {12! \\over 8!(12-8)!}8!\n= {12! \\over (12-8)!}\n= {12! \\over 4!}\n= 19958400</span></p>"},"sha1":"e9e340b0919efd589eb1ee134a5f9fe76a0c29ab"}]}
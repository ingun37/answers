{
    "item": {
        "attr": {},
        "numAnswer": 6,
        "sha1": "f6c638fb5a6a17e36924345d70d9a1a79be3d2b5",
        "title": "12. Limits and Colimits"
    },
    "kids": [
        {
            "attr": {
                "a": {
                    "content": "<p>Let <span class=\"math inline\">I</span> be the image category of the\npushout consisting of <span class=\"math inline\">z \\rightarrow x</span>\nand <span class=\"math inline\">z \\rightarrow y</span></p>\n<p>Let <span class=\"math inline\">a</span> be the colimit of <span\nclass=\"math inline\">I</span>. For any <span class=\"math inline\">b</span>\nthat is a super class of both <span class=\"math inline\">x&#39;</span>\nand <span class=\"math inline\">y&#39;</span>, <span\nclass=\"math inline\">a</span> is deriving <span\nclass=\"math inline\">b</span>. Its the opposite definition of the\npullback described in 12.2-Examples of Limits</p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>How would you describe a pushout in the category of C++ classes?</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "aee57190d3cd0291970750b6e8be9f2cd1bcc310",
            "title": "1"
        },
        {
            "attr": {
                "a": {
                    "content": "<p>It's the same way as previous challenge but with opposite\nmorphisms.</p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>Similarly, show that a pushout from an initial object (if one exists)\nis the coproduct.</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "c27f85853f1b8047fce27368bacbee044f7dca57",
            "title": "6"
        },
        {
            "attr": {
                "a": {
                    "content": "<p>In the context of given example from the book, it's same to\nequalizer. (Of course it's mostly not in outside of the context. Check\nout <a\nhref=\"https://en.wikipedia.org/wiki/Coequalizer\">wikipedia</a>)</p>\n<p>I'll use the same example the book used explaining equalizer.</p>\n<h2 id=\"equalizer\">equalizer</h2>\n<p><span class=\"math inline\">ACx=BCx</span><br />\n<span class=\"math inline\">\\rightarrow \\left( A-B\\right)\nCx=0</span><br />\n<span class=\"math inline\">\\rightarrow \\left( \\left( 1\\enspace 2\\right)\n-\\left( -1\\enspace 1\\right) \\right) C=0</span><br />\n<span class=\"math inline\">\\rightarrow \\left( 2\\enspace 1\\right)\nC=0</span><br />\n<span class=\"math inline\">\\rightarrow C=\\begin{pmatrix}1 \\\\\n-2\\end{pmatrix}</span></p>\n<h2 id=\"coequalizer\">coequalizer</h2>\n<p><span class=\"math inline\">CA\\begin{pmatrix}x\n\\\\y\\end{pmatrix}=CB\\begin{pmatrix}x \\\\ y\\end{pmatrix}</span><br />\n<span class=\"math inline\">\\rightarrow CA-CB=0</span><br />\n<span class=\"math inline\">\\rightarrow C\\left( A-B\\right) =0</span><br />\n<span class=\"math inline\">\\rightarrow C\\left( 2\\enspace 1\\right)\n=0</span><br />\n<span class=\"math inline\">\\rightarrow C=\\begin{pmatrix}1\n\\\\-2\\end{pmatrix}</span></p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>Can you guess what a coequalizer is?</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "183348814a39874bd279ae1d949b8e78c45cd660",
            "title": "4"
        },
        {
            "attr": {
                "a": {
                    "content": "<p>pullback/pushout would be a smallest superset/biggest subset of two\nintersecting set/neibhoring set.</p>\n<p>initial/terminal object would be a set of all elements/empty set.</p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>Subsets of a given set form a category. A morphism in that category\nis defined to be an arrow connecting two sets if the first is the subset\nof the second. What is a pullback of two sets in such a category? What's\na pushout? What are the initial and terminal objects?</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "e9785055bdf741c517dc6e08bfd1dd3881a44777",
            "title": "3"
        },
        {
            "attr": {
                "a": {
                    "content": "<p>Let <span class=\"math inline\">P</span> be the image category of\npullback Let <span class=\"math inline\">F_2</span> be the functor that\nmaps elements of <span class=\"math inline\">2</span> to <span\nclass=\"math inline\">a</span>, <span class=\"math inline\">b</span> in\n<span class=\"math inline\">C</span> each. Let <span\nclass=\"math inline\">F_p</span> be the functor that maps elements of\n<span class=\"math inline\">P</span> to <span\nclass=\"math inline\">a</span>, <span class=\"math inline\">b</span>, <span\nclass=\"math inline\">t</span> in <span class=\"math inline\">C</span> where\n<span class=\"math inline\">t</span> is the terminal object.</p>\n<p>Diagram would be looking like this.</p>\n<p><img\nsrc=\"/answers/books/Category%20Theory%20For%20Programmers/12.%20Limits%20and%20Colimits/5/IMG_0288.jpg\" /></p>\n<p>You can make a functor that maps each element of <span\nclass=\"math inline\">2</span> into <span class=\"math inline\">P a,\nb</span> respectively. This functor means that every apex of <span\nclass=\"math inline\">P</span> is also an apex of <span\nclass=\"math inline\">2</span> hence theres unique morphism <span\nclass=\"math inline\">LimF_p \\rightarrow LimF_2</span> .</p>\n<p><img\nsrc=\"/answers/books/Category%20Theory%20For%20Programmers/12.%20Limits%20and%20Colimits/5/IMG_0289.jpg\" /></p>\n<p>Since <span class=\"math inline\">t</span> is terminal there is a\nexactly one morphism going from <span class=\"math inline\">LimF_2</span>\nto <span class=\"math inline\">t</span></p>\n<p><img\nsrc=\"/answers/books/Category%20Theory%20For%20Programmers/12.%20Limits%20and%20Colimits/5/IMG_0290.jpg\" /></p>\n<p>that makes a natural transformation hence <span\nclass=\"math inline\">LimF_2</span> is also an apex of pullback. That\nmeans theres a unique morphism <span class=\"math inline\">LimF_2\n\\rightarrow LimF_p</span></p>\n<p><img\nsrc=\"/answers/books/Category%20Theory%20For%20Programmers/12.%20Limits%20and%20Colimits/5/IMG_0291.jpg\" /></p>\n<p>isomorphism BAM!</p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>Show that, in a category with a terminal object, a pullback towards\nthe terminal object is a product.</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "7255eeb2c413fbeafb6dcddbef2f9f9aefa351f3",
            "title": "5"
        },
        {
            "attr": {
                "a": {
                    "content": "<p>Let <span class=\"math inline\">l</span> be the limit of the identity\nfunctor.<br />\nTo be an initial object, there must be only one morphism from <span\nclass=\"math inline\">l</span> to any other object.<br />\nIf there's 2 morphisms <span class=\"math inline\">m</span> and <span\nclass=\"math inline\">n</span> from <span class=\"math inline\">l</span> to\nsome other object <span class=\"math inline\">o</span>, and if the 2\nmorphisms are same, then it must imply that <span\nclass=\"math inline\">l</span> is a initial object. Let's proove it.</p>\n<p>Just like a cone can't have two lines for one base vertex, <span\nclass=\"math inline\">l</span>, as an apex of a cone, can't have both\n<span class=\"math inline\">m</span> and <span\nclass=\"math inline\">n</span>. We have to assign one morphism, to say\n<span class=\"math inline\">n</span>, to some other apex <span\nclass=\"math inline\">a</span>.</p>\n<p><span class=\"math inline\">m:l\\rightarrow o</span> <span\nclass=\"math inline\">n:a\\rightarrow o</span></p>\n<p>Being a limit point, there must be a unique factorizing morphism\n<span class=\"math inline\">f</span> from <span\nclass=\"math inline\">a</span> to <span class=\"math inline\">l</span> which\nmakes <span class=\"math inline\">n = m \\cdot f</span>.</p>\n<p><span class=\"math inline\">\\exists ! f:a \\rightarrow l \\enspace s.t\n\\enspace n = m \\cdot f</span></p>\n<p>But <span class=\"math inline\">l</span> and <span\nclass=\"math inline\">a</span> is same point that means <span\nclass=\"math inline\">f</span> must be <span class=\"math inline\">id</span>\nmorphism which means <span class=\"math inline\">n = m \\cdot id</span>\nagain which means <span class=\"math inline\">n = m</span></p>\n<p><span class=\"math inline\">l=a</span> <span\nclass=\"math inline\">\\rightarrow f = id</span> <span\nclass=\"math inline\">\\rightarrow n = m \\cdot id</span> <span\nclass=\"math inline\">\\rightarrow n=m</span></p>",
                    "posixTime": 1576759868
                },
                "q": {
                    "content": "<p>Show that the limit of the identity functor\n<code>Id :: C -&gt; C</code> is the initial object.</p>",
                    "posixTime": 1576759868
                }
            },
            "numAnswer": 1,
            "sha1": "d5bc8c4933a6013a36e24330c4c92f244ebb73b5",
            "title": "2"
        }
    ],
    "parentSha1": "bd467f809ce2a42bd342fce03ff7fd2bd3d8446c",
    "path": "answers-db/books/Category Theory For Programmers/12. Limits and Colimits"
}